
/*! Sizzle v2.3.4-pre | (c) JS Foundation and other contributors | js.foundation */
!function(a){var b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u="sizzle"+1*new Date,v=a.document,w=0,x=0,y=ia(),z=ia(),A=ia(),B=ia(),C=function(a,b){return a===b&&(l=!0),0},D={}.hasOwnProperty,E=[],F=E.pop,G=E.push,H=E.push,I=E.slice,J=function(a,b){for(var c=0,d=a.length;c<d;c++)if(a[c]===b)return c;return-1},K="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",L="[\\x20\\t\\r\\n\\f]",M="(?:\\\\.|[\\w-]|[^\0-\\xa0])+",N="\\["+L+"*("+M+")(?:"+L+"*([*^$|!~]?=)"+L+"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+M+"))|)"+L+"*\\]",O=":("+M+")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|"+N+")*)|.*)\\)|)",P=new RegExp(L+"+","g"),Q=new RegExp("^"+L+"+|((?:^|[^\\\\])(?:\\\\.)*)"+L+"+$","g"),R=new RegExp("^"+L+"*,"+L+"*"),S=new RegExp("^"+L+"*([>+~]|"+L+")"+L+"*"),T=new RegExp("="+L+"*([^\\]'\"]*?)"+L+"*\\]","g"),U=new RegExp(O),V=new RegExp("^"+M+"$"),W={ID:new RegExp("^#("+M+")"),CLASS:new RegExp("^\\.("+M+")"),TAG:new RegExp("^("+M+"|[*])"),ATTR:new RegExp("^"+N),PSEUDO:new RegExp("^"+O),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+L+"*(even|odd|(([+-]|)(\\d*)n|)"+L+"*(?:([+-]|)"+L+"*(\\d+)|))"+L+"*\\)|)","i"),bool:new RegExp("^(?:"+K+")$","i"),needsContext:new RegExp("^"+L+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+L+"*((?:-\\d)?\\d*)"+L+"*\\)|)(?=[^-]|$)","i")},X=/^(?:input|select|textarea|button)$/i,Y=/^h\d$/i,Z=/^[^{]+\{\s*\[native \w/,$=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,_=/[+~]/,aa=new RegExp("\\\\([\\da-f]{1,6}"+L+"?|("+L+")|.)","ig"),ba=function(a,b,c){var d="0x"+b-65536;return d!==d||c?b:d<0?String.fromCharCode(d+65536):String.fromCharCode(d>>10|55296,1023&d|56320)},ca=/([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,da=function(a,b){return b?"\0"===a?"\ufffd":a.slice(0,-1)+"\\"+a.charCodeAt(a.length-1).toString(16)+" ":"\\"+a},ea=function(){m()},fa=ua(function(a){return a.disabled===!0&&"fieldset"===a.nodeName.toLowerCase()},{dir:"parentNode",next:"legend"});try{H.apply(E=I.call(v.childNodes),v.childNodes),E[v.childNodes.length].nodeType}catch(ga){H={apply:E.length?function(a,b){G.apply(a,I.call(b))}:function(a,b){var c=a.length,d=0;while(a[c++]=b[d++]);a.length=c-1}}}function ha(a,b,d,e){var f,h,j,k,l,o,r,s=b&&b.ownerDocument,w=b?b.nodeType:9;if(d=d||[],"string"!=typeof a||!a||1!==w&&9!==w&&11!==w)return d;if(!e&&((b?b.ownerDocument||b:v)!==n&&m(b),b=b||n,p)){if(11!==w&&(l=$.exec(a)))if(f=l[1]){if(9===w){if(!(j=b.getElementById(f)))return d;if(j.id===f)return d.push(j),d}else if(s&&(j=s.getElementById(f))&&t(b,j)&&j.id===f)return d.push(j),d}else{if(l[2])return H.apply(d,b.getElementsByTagName(a)),d;if((f=l[3])&&c.getElementsByClassName&&b.getElementsByClassName)return H.apply(d,b.getElementsByClassName(f)),d}if(c.qsa&&!B[a+" "]&&(!q||!q.test(a))){if(1!==w)s=b,r=a;else if("object"!==b.nodeName.toLowerCase()){(k=b.getAttribute("id"))?k=k.replace(ca,da):b.setAttribute("id",k=u),o=g(a),h=o.length;while(h--)o[h]="#"+k+" "+ta(o[h]);r=o.join(","),s=_.test(a)&&ra(b.parentNode)||b}if(r)try{return H.apply(d,s.querySelectorAll(r)),d}catch(x){B(a)}finally{k===u&&b.removeAttribute("id")}}}return i(a.replace(Q,"$1"),b,d,e)}function ia(){var a=[];function b(c,e){return a.push(c+" ")>d.cacheLength&&delete b[a.shift()],b[c+" "]=e}return b}function ja(a){return a[u]=!0,a}function ka(a){var b=n.createElement("fieldset");try{return!!a(b)}catch(c){return!1}finally{b.parentNode&&b.parentNode.removeChild(b),b=null}}function la(a,b){var c=a.split("|"),e=c.length;while(e--)d.attrHandle[c[e]]=b}function ma(a,b){var c=b&&a,d=c&&1===a.nodeType&&1===b.nodeType&&a.sourceIndex-b.sourceIndex;if(d)return d;if(c)while(c=c.nextSibling)if(c===b)return-1;return a?1:-1}function na(a){return function(b){var c=b.nodeName.toLowerCase();return"input"===c&&b.type===a}}function oa(a){return function(b){var c=b.nodeName.toLowerCase();return("input"===c||"button"===c)&&b.type===a}}function pa(a){return function(b){return"form"in b?b.parentNode&&b.disabled===!1?"label"in b?"label"in b.parentNode?b.parentNode.disabled===a:b.disabled===a:b.isDisabled===a||b.isDisabled!==!a&&fa(b)===a:b.disabled===a:"label"in b&&b.disabled===a}}function qa(a){return ja(function(b){return b=+b,ja(function(c,d){var e,f=a([],c.length,b),g=f.length;while(g--)c[e=f[g]]&&(c[e]=!(d[e]=c[e]))})})}function ra(a){return a&&"undefined"!=typeof a.getElementsByTagName&&a}c=ha.support={},f=ha.isXML=function(a){var b=a&&(a.ownerDocument||a).documentElement;return!!b&&"HTML"!==b.nodeName},m=ha.setDocument=function(a){var b,e,g=a?a.ownerDocument||a:v;return g!==n&&9===g.nodeType&&g.documentElement?(n=g,o=n.documentElement,p=!f(n),v!==n&&(e=n.defaultView)&&e.top!==e&&(e.addEventListener?e.addEventListener("unload",ea,!1):e.attachEvent&&e.attachEvent("onunload",ea)),c.attributes=ka(function(a){return a.className="i",!a.getAttribute("className")}),c.getElementsByTagName=ka(function(a){return a.appendChild(n.createComment("")),!a.getElementsByTagName("*").length}),c.getElementsByClassName=Z.test(n.getElementsByClassName),c.getById=ka(function(a){return o.appendChild(a).id=u,!n.getElementsByName||!n.getElementsByName(u).length}),c.getById?(d.filter.ID=function(a){var b=a.replace(aa,ba);return function(a){return a.getAttribute("id")===b}},d.find.ID=function(a,b){if("undefined"!=typeof b.getElementById&&p){var c=b.getElementById(a);return c?[c]:[]}}):(d.filter.ID=function(a){var b=a.replace(aa,ba);return function(a){var c="undefined"!=typeof a.getAttributeNode&&a.getAttributeNode("id");return c&&c.value===b}},d.find.ID=function(a,b){if("undefined"!=typeof b.getElementById&&p){var c,d,e,f=b.getElementById(a);if(f){if(c=f.getAttributeNode("id"),c&&c.value===a)return[f];e=b.getElementsByName(a),d=0;while(f=e[d++])if(c=f.getAttributeNode("id"),c&&c.value===a)return[f]}return[]}}),d.find.TAG=c.getElementsByTagName?function(a,b){return"undefined"!=typeof b.getElementsByTagName?b.getElementsByTagName(a):c.qsa?b.querySelectorAll(a):void 0}:function(a,b){var c,d=[],e=0,f=b.getElementsByTagName(a);if("*"===a){while(c=f[e++])1===c.nodeType&&d.push(c);return d}return f},d.find.CLASS=c.getElementsByClassName&&function(a,b){if("undefined"!=typeof b.getElementsByClassName&&p)return b.getElementsByClassName(a)},r=[],q=[],(c.qsa=Z.test(n.querySelectorAll))&&(ka(function(a){o.appendChild(a).innerHTML="<a id='"+u+"'></a><select id='"+u+"-\r\\' msallowcapture=''><option selected=''></option></select>",a.querySelectorAll("[msallowcapture^='']").length&&q.push("[*^$]="+L+"*(?:''|\"\")"),a.querySelectorAll("[selected]").length||q.push("\\["+L+"*(?:value|"+K+")"),a.querySelectorAll("[id~="+u+"-]").length||q.push("~="),a.querySelectorAll(":checked").length||q.push(":checked"),a.querySelectorAll("a#"+u+"+*").length||q.push(".#.+[+~]")}),ka(function(a){a.innerHTML="<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>";var b=n.createElement("input");b.setAttribute("type","hidden"),a.appendChild(b).setAttribute("name","D"),a.querySelectorAll("[name=d]").length&&q.push("name"+L+"*[*^$|!~]?="),2!==a.querySelectorAll(":enabled").length&&q.push(":enabled",":disabled"),o.appendChild(a).disabled=!0,2!==a.querySelectorAll(":disabled").length&&q.push(":enabled",":disabled"),a.querySelectorAll("*,:x"),q.push(",.*:")})),(c.matchesSelector=Z.test(s=o.matches||o.webkitMatchesSelector||o.mozMatchesSelector||o.oMatchesSelector||o.msMatchesSelector))&&ka(function(a){c.disconnectedMatch=s.call(a,"*"),s.call(a,"[s!='']:x"),r.push("!=",O)}),q=q.length&&new RegExp(q.join("|")),r=r.length&&new RegExp(r.join("|")),b=Z.test(o.compareDocumentPosition),t=b||Z.test(o.contains)?function(a,b){var c=9===a.nodeType?a.documentElement:a,d=b&&b.parentNode;return a===d||!(!d||1!==d.nodeType||!(c.contains?c.contains(d):a.compareDocumentPosition&&16&a.compareDocumentPosition(d)))}:function(a,b){if(b)while(b=b.parentNode)if(b===a)return!0;return!1},C=b?function(a,b){if(a===b)return l=!0,0;var d=!a.compareDocumentPosition-!b.compareDocumentPosition;return d?d:(d=(a.ownerDocument||a)===(b.ownerDocument||b)?a.compareDocumentPosition(b):1,1&d||!c.sortDetached&&b.compareDocumentPosition(a)===d?a===n||a.ownerDocument===v&&t(v,a)?-1:b===n||b.ownerDocument===v&&t(v,b)?1:k?J(k,a)-J(k,b):0:4&d?-1:1)}:function(a,b){if(a===b)return l=!0,0;var c,d=0,e=a.parentNode,f=b.parentNode,g=[a],h=[b];if(!e||!f)return a===n?-1:b===n?1:e?-1:f?1:k?J(k,a)-J(k,b):0;if(e===f)return ma(a,b);c=a;while(c=c.parentNode)g.unshift(c);c=b;while(c=c.parentNode)h.unshift(c);while(g[d]===h[d])d++;return d?ma(g[d],h[d]):g[d]===v?-1:h[d]===v?1:0},n):n},ha.matches=function(a,b){return ha(a,null,null,b)},ha.matchesSelector=function(a,b){if((a.ownerDocument||a)!==n&&m(a),b=b.replace(T,"='$1']"),c.matchesSelector&&p&&!B[b+" "]&&(!r||!r.test(b))&&(!q||!q.test(b)))try{var d=s.call(a,b);if(d||c.disconnectedMatch||a.document&&11!==a.document.nodeType)return d}catch(e){B(b)}return ha(b,n,null,[a]).length>0},ha.contains=function(a,b){return(a.ownerDocument||a)!==n&&m(a),t(a,b)},ha.attr=function(a,b){(a.ownerDocument||a)!==n&&m(a);var e=d.attrHandle[b.toLowerCase()],f=e&&D.call(d.attrHandle,b.toLowerCase())?e(a,b,!p):void 0;return void 0!==f?f:c.attributes||!p?a.getAttribute(b):(f=a.getAttributeNode(b))&&f.specified?f.value:null},ha.escape=function(a){return(a+"").replace(ca,da)},ha.error=function(a){throw new Error("Syntax error, unrecognized expression: "+a)},ha.uniqueSort=function(a){var b,d=[],e=0,f=0;if(l=!c.detectDuplicates,k=!c.sortStable&&a.slice(0),a.sort(C),l){while(b=a[f++])b===a[f]&&(e=d.push(f));while(e--)a.splice(d[e],1)}return k=null,a},e=ha.getText=function(a){var b,c="",d=0,f=a.nodeType;if(f){if(1===f||9===f||11===f){if("string"==typeof a.textContent)return a.textContent;for(a=a.firstChild;a;a=a.nextSibling)c+=e(a)}else if(3===f||4===f)return a.nodeValue}else while(b=a[d++])c+=e(b);return c},d=ha.selectors={cacheLength:50,createPseudo:ja,match:W,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(a){return a[1]=a[1].replace(aa,ba),a[3]=(a[3]||a[4]||a[5]||"").replace(aa,ba),"~="===a[2]&&(a[3]=" "+a[3]+" "),a.slice(0,4)},CHILD:function(a){return a[1]=a[1].toLowerCase(),"nth"===a[1].slice(0,3)?(a[3]||ha.error(a[0]),a[4]=+(a[4]?a[5]+(a[6]||1):2*("even"===a[3]||"odd"===a[3])),a[5]=+(a[7]+a[8]||"odd"===a[3])):a[3]&&ha.error(a[0]),a},PSEUDO:function(a){var b,c=!a[6]&&a[2];return W.CHILD.test(a[0])?null:(a[3]?a[2]=a[4]||a[5]||"":c&&U.test(c)&&(b=g(c,!0))&&(b=c.indexOf(")",c.length-b)-c.length)&&(a[0]=a[0].slice(0,b),a[2]=c.slice(0,b)),a.slice(0,3))}},filter:{TAG:function(a){var b=a.replace(aa,ba).toLowerCase();return"*"===a?function(){return!0}:function(a){return a.nodeName&&a.nodeName.toLowerCase()===b}},CLASS:function(a){var b=y[a+" "];return b||(b=new RegExp("(^|"+L+")"+a+"("+L+"|$)"))&&y(a,function(a){return b.test("string"==typeof a.className&&a.className||"undefined"!=typeof a.getAttribute&&a.getAttribute("class")||"")})},ATTR:function(a,b,c){return function(d){var e=ha.attr(d,a);return null==e?"!="===b:!b||(e+="","="===b?e===c:"!="===b?e!==c:"^="===b?c&&0===e.indexOf(c):"*="===b?c&&e.indexOf(c)>-1:"$="===b?c&&e.slice(-c.length)===c:"~="===b?(" "+e.replace(P," ")+" ").indexOf(c)>-1:"|="===b&&(e===c||e.slice(0,c.length+1)===c+"-"))}},CHILD:function(a,b,c,d,e){var f="nth"!==a.slice(0,3),g="last"!==a.slice(-4),h="of-type"===b;return 1===d&&0===e?function(a){return!!a.parentNode}:function(b,c,i){var j,k,l,m,n,o,p=f!==g?"nextSibling":"previousSibling",q=b.parentNode,r=h&&b.nodeName.toLowerCase(),s=!i&&!h,t=!1;if(q){if(f){while(p){m=b;while(m=m[p])if(h?m.nodeName.toLowerCase()===r:1===m.nodeType)return!1;o=p="only"===a&&!o&&"nextSibling"}return!0}if(o=[g?q.firstChild:q.lastChild],g&&s){m=q,l=m[u]||(m[u]={}),k=l[m.uniqueID]||(l[m.uniqueID]={}),j=k[a]||[],n=j[0]===w&&j[1],t=n&&j[2],m=n&&q.childNodes[n];while(m=++n&&m&&m[p]||(t=n=0)||o.pop())if(1===m.nodeType&&++t&&m===b){k[a]=[w,n,t];break}}else if(s&&(m=b,l=m[u]||(m[u]={}),k=l[m.uniqueID]||(l[m.uniqueID]={}),j=k[a]||[],n=j[0]===w&&j[1],t=n),t===!1)while(m=++n&&m&&m[p]||(t=n=0)||o.pop())if((h?m.nodeName.toLowerCase()===r:1===m.nodeType)&&++t&&(s&&(l=m[u]||(m[u]={}),k=l[m.uniqueID]||(l[m.uniqueID]={}),k[a]=[w,t]),m===b))break;return t-=e,t===d||t%d===0&&t/d>=0}}},PSEUDO:function(a,b){var c,e=d.pseudos[a]||d.setFilters[a.toLowerCase()]||ha.error("unsupported pseudo: "+a);return e[u]?e(b):e.length>1?(c=[a,a,"",b],d.setFilters.hasOwnProperty(a.toLowerCase())?ja(function(a,c){var d,f=e(a,b),g=f.length;while(g--)d=J(a,f[g]),a[d]=!(c[d]=f[g])}):function(a){return e(a,0,c)}):e}},pseudos:{not:ja(function(a){var b=[],c=[],d=h(a.replace(Q,"$1"));return d[u]?ja(function(a,b,c,e){var f,g=d(a,null,e,[]),h=a.length;while(h--)(f=g[h])&&(a[h]=!(b[h]=f))}):function(a,e,f){return b[0]=a,d(b,null,f,c),b[0]=null,!c.pop()}}),has:ja(function(a){return function(b){return ha(a,b).length>0}}),contains:ja(function(a){return a=a.replace(aa,ba),function(b){return(b.textContent||b.innerText||e(b)).indexOf(a)>-1}}),lang:ja(function(a){return V.test(a||"")||ha.error("unsupported lang: "+a),a=a.replace(aa,ba).toLowerCase(),function(b){var c;do if(c=p?b.lang:b.getAttribute("xml:lang")||b.getAttribute("lang"))return c=c.toLowerCase(),c===a||0===c.indexOf(a+"-");while((b=b.parentNode)&&1===b.nodeType);return!1}}),target:function(b){var c=a.location&&a.location.hash;return c&&c.slice(1)===b.id},root:function(a){return a===o},focus:function(a){return a===n.activeElement&&(!n.hasFocus||n.hasFocus())&&!!(a.type||a.href||~a.tabIndex)},enabled:pa(!1),disabled:pa(!0),checked:function(a){var b=a.nodeName.toLowerCase();return"input"===b&&!!a.checked||"option"===b&&!!a.selected},selected:function(a){return a.parentNode&&a.parentNode.selectedIndex,a.selected===!0},empty:function(a){for(a=a.firstChild;a;a=a.nextSibling)if(a.nodeType<6)return!1;return!0},parent:function(a){return!d.pseudos.empty(a)},header:function(a){return Y.test(a.nodeName)},input:function(a){return X.test(a.nodeName)},button:function(a){var b=a.nodeName.toLowerCase();return"input"===b&&"button"===a.type||"button"===b},text:function(a){var b;return"input"===a.nodeName.toLowerCase()&&"text"===a.type&&(null==(b=a.getAttribute("type"))||"text"===b.toLowerCase())},first:qa(function(){return[0]}),last:qa(function(a,b){return[b-1]}),eq:qa(function(a,b,c){return[c<0?c+b:c]}),even:qa(function(a,b){for(var c=0;c<b;c+=2)a.push(c);return a}),odd:qa(function(a,b){for(var c=1;c<b;c+=2)a.push(c);return a}),lt:qa(function(a,b,c){for(var d=c<0?c+b:c;--d>=0;)a.push(d);return a}),gt:qa(function(a,b,c){for(var d=c<0?c+b:c;++d<b;)a.push(d);return a})}},d.pseudos.nth=d.pseudos.eq;for(b in{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})d.pseudos[b]=na(b);for(b in{submit:!0,reset:!0})d.pseudos[b]=oa(b);function sa(){}sa.prototype=d.filters=d.pseudos,d.setFilters=new sa,g=ha.tokenize=function(a,b){var c,e,f,g,h,i,j,k=z[a+" "];if(k)return b?0:k.slice(0);h=a,i=[],j=d.preFilter;while(h){c&&!(e=R.exec(h))||(e&&(h=h.slice(e[0].length)||h),i.push(f=[])),c=!1,(e=S.exec(h))&&(c=e.shift(),f.push({value:c,type:e[0].replace(Q," ")}),h=h.slice(c.length));for(g in d.filter)!(e=W[g].exec(h))||j[g]&&!(e=j[g](e))||(c=e.shift(),f.push({value:c,type:g,matches:e}),h=h.slice(c.length));if(!c)break}return b?h.length:h?ha.error(a):z(a,i).slice(0)};function ta(a){for(var b=0,c=a.length,d="";b<c;b++)d+=a[b].value;return d}function ua(a,b,c){var d=b.dir,e=b.next,f=e||d,g=c&&"parentNode"===f,h=x++;return b.first?function(b,c,e){while(b=b[d])if(1===b.nodeType||g)return a(b,c,e);return!1}:function(b,c,i){var j,k,l,m=[w,h];if(i){while(b=b[d])if((1===b.nodeType||g)&&a(b,c,i))return!0}else while(b=b[d])if(1===b.nodeType||g)if(l=b[u]||(b[u]={}),k=l[b.uniqueID]||(l[b.uniqueID]={}),e&&e===b.nodeName.toLowerCase())b=b[d]||b;else{if((j=k[f])&&j[0]===w&&j[1]===h)return m[2]=j[2];if(k[f]=m,m[2]=a(b,c,i))return!0}return!1}}function va(a){return a.length>1?function(b,c,d){var e=a.length;while(e--)if(!a[e](b,c,d))return!1;return!0}:a[0]}function wa(a,b,c){for(var d=0,e=b.length;d<e;d++)ha(a,b[d],c);return c}function xa(a,b,c,d,e){for(var f,g=[],h=0,i=a.length,j=null!=b;h<i;h++)(f=a[h])&&(c&&!c(f,d,e)||(g.push(f),j&&b.push(h)));return g}function ya(a,b,c,d,e,f){return d&&!d[u]&&(d=ya(d)),e&&!e[u]&&(e=ya(e,f)),ja(function(f,g,h,i){var j,k,l,m=[],n=[],o=g.length,p=f||wa(b||"*",h.nodeType?[h]:h,[]),q=!a||!f&&b?p:xa(p,m,a,h,i),r=c?e||(f?a:o||d)?[]:g:q;if(c&&c(q,r,h,i),d){j=xa(r,n),d(j,[],h,i),k=j.length;while(k--)(l=j[k])&&(r[n[k]]=!(q[n[k]]=l))}if(f){if(e||a){if(e){j=[],k=r.length;while(k--)(l=r[k])&&j.push(q[k]=l);e(null,r=[],j,i)}k=r.length;while(k--)(l=r[k])&&(j=e?J(f,l):m[k])>-1&&(f[j]=!(g[j]=l))}}else r=xa(r===g?r.splice(o,r.length):r),e?e(null,g,r,i):H.apply(g,r)})}function za(a){for(var b,c,e,f=a.length,g=d.relative[a[0].type],h=g||d.relative[" "],i=g?1:0,k=ua(function(a){return a===b},h,!0),l=ua(function(a){return J(b,a)>-1},h,!0),m=[function(a,c,d){var e=!g&&(d||c!==j)||((b=c).nodeType?k(a,c,d):l(a,c,d));return b=null,e}];i<f;i++)if(c=d.relative[a[i].type])m=[ua(va(m),c)];else{if(c=d.filter[a[i].type].apply(null,a[i].matches),c[u]){for(e=++i;e<f;e++)if(d.relative[a[e].type])break;return ya(i>1&&va(m),i>1&&ta(a.slice(0,i-1).concat({value:" "===a[i-2].type?"*":""})).replace(Q,"$1"),c,i<e&&za(a.slice(i,e)),e<f&&za(a=a.slice(e)),e<f&&ta(a))}m.push(c)}return va(m)}function Aa(a,b){var c=b.length>0,e=a.length>0,f=function(f,g,h,i,k){var l,o,q,r=0,s="0",t=f&&[],u=[],v=j,x=f||e&&d.find.TAG("*",k),y=w+=null==v?1:Math.random()||.1,z=x.length;for(k&&(j=g===n||g||k);s!==z&&null!=(l=x[s]);s++){if(e&&l){o=0,g||l.ownerDocument===n||(m(l),h=!p);while(q=a[o++])if(q(l,g||n,h)){i.push(l);break}k&&(w=y)}c&&((l=!q&&l)&&r--,f&&t.push(l))}if(r+=s,c&&s!==r){o=0;while(q=b[o++])q(t,u,g,h);if(f){if(r>0)while(s--)t[s]||u[s]||(u[s]=F.call(i));u=xa(u)}H.apply(i,u),k&&!f&&u.length>0&&r+b.length>1&&ha.uniqueSort(i)}return k&&(w=y,j=v),t};return c?ja(f):f}h=ha.compile=function(a,b){var c,d=[],e=[],f=A[a+" "];if(!f){b||(b=g(a)),c=b.length;while(c--)f=za(b[c]),f[u]?d.push(f):e.push(f);f=A(a,Aa(e,d)),f.selector=a}return f},i=ha.select=function(a,b,c,e){var f,i,j,k,l,m="function"==typeof a&&a,n=!e&&g(a=m.selector||a);if(c=c||[],1===n.length){if(i=n[0]=n[0].slice(0),i.length>2&&"ID"===(j=i[0]).type&&9===b.nodeType&&p&&d.relative[i[1].type]){if(b=(d.find.ID(j.matches[0].replace(aa,ba),b)||[])[0],!b)return c;m&&(b=b.parentNode),a=a.slice(i.shift().value.length)}f=W.needsContext.test(a)?0:i.length;while(f--){if(j=i[f],d.relative[k=j.type])break;if((l=d.find[k])&&(e=l(j.matches[0].replace(aa,ba),_.test(i[0].type)&&ra(b.parentNode)||b))){if(i.splice(f,1),a=e.length&&ta(i),!a)return H.apply(c,e),c;break}}}return(m||h(a,n))(e,b,!p,c,!b||_.test(a)&&ra(b.parentNode)||b),c},c.sortStable=u.split("").sort(C).join("")===u,c.detectDuplicates=!!l,m(),c.sortDetached=ka(function(a){return 1&a.compareDocumentPosition(n.createElement("fieldset"))}),ka(function(a){return a.innerHTML="<a href='#'></a>","#"===a.firstChild.getAttribute("href")})||la("type|href|height|width",function(a,b,c){if(!c)return a.getAttribute(b,"type"===b.toLowerCase()?1:2)}),c.attributes&&ka(function(a){return a.innerHTML="<input/>",a.firstChild.setAttribute("value",""),""===a.firstChild.getAttribute("value")})||la("value",function(a,b,c){if(!c&&"input"===a.nodeName.toLowerCase())return a.defaultValue}),ka(function(a){return null==a.getAttribute("disabled")})||la(K,function(a,b,c){var d;if(!c)return a[b]===!0?b.toLowerCase():(d=a.getAttributeNode(b))&&d.specified?d.value:null});var Ba=a.Sizzle;ha.noConflict=function(){return a.Sizzle===ha&&(a.Sizzle=Ba),ha},"function"==typeof define&&define.amd?define(function(){return ha}):"undefined"!=typeof module&&module.exports?module.exports=ha:a.Sizzle=ha}(window);


// a slim jQuery like object
var Junior = function() {
	var coll = Object.create(Array.prototype);
	for (var prop in Junior.prototype) {
		if (Junior.prototype.hasOwnProperty(prop)) {
			coll[prop] = Junior.prototype[prop];
		}
	}
	return coll;
};

Junior.prototype = {
	find: function(selector, context) {
		var found = [],
			i, il;
		context = context || document;

		if (selector.constructor === Array) {
			found = selector;
		} else if (selector.nodeType || selector === window) {
			found = [selector];
		} else {
			if (this.length) context = this[0];
			found = Sizzle(selector, context);
		}
		if (this.length > 0) return jr(found);
		// populate 'this'
		for (i=0, il=found.length; i<il; i++) {
			Array.prototype.push.call(this, found[i]);
		}
		return this;
	},
	nth: function(i) {
		return jr(this[i]);
	},
	index: function() {
		var i=0, el;
		if (!this.length || this[0].nodeType === 3) return;
		el = this[0];
		while (el.previousSibling) {
			el = el.previousSibling;
			if (el.nodeType !== 3) i += 1;
		}
		return i;
	},
	hasClass: function(name) {
		return this.length ? this[0].matches('.'+ name) : false;
	},
	addClass: function(names) {
		for (var i=0, il=this.length; i<il; i++) {
			this[i].className = this[i].className.split(/\s+/).concat(names.split(/\s+/)).removeDuplicates().join(' ');
		}
		return this;
	},
	removeClass: function(names) {
		for (var i=0, il=this.length; i<il; i++) {
			this[i].className = this[i].className.split(/\s+/).difference(names.split(/\s+/)).join(' ');
		}
		return this;
	},
	css: function (name, value) {
		for (var i=0, il=this.length, fixedName; i<il; i++) {
			if (value) {
				fixedName = fixStyleName(name);
			} else {
				switch (typeof (name)) {
					case 'string':
						return getStyle(this[i], name);
					case 'object':
						for (var key in name) {
							fixedName = fixStyleName(key);
							this[i].style[fixedName] = name[key];
						}
						break;
				}
			}
		}
		return this;
	},
	val: function (str, el) {
		if (!str && str !== '') {
			return this.length ? this[0].value : '';
		}
		for (var i = 0, il = this.length; i < il; i++) {
			this[i].value = str;
		}
		return this;
	},
	text: function (str, el) {
		return this[0].textContent;
	},
	html: function (str, el) {
		if (!str && str !== '') {
			return this.length ? this[0].innerHTML : '';
		}
		for (var i = 0, il = this.length; i < il; i++) {
			this[i].innerHTML = str;
		}
		return this;
	},
	removeAttr: function (name, value, el) {
		var arr = (el) ? [el] : this,
			key;
		for (var i=0, il=arr.length; i<il; i++) {
			arr[i].removeAttribute(name);
		}
		return this;
	},
	attr: function (name, value, el) {
		var arr = (el) ? [el] : this,
			key;
		for (var i=0, il=arr.length; i<il; i++) {
			if (!value) {
				switch (typeof (name)) {
					case 'string':
						return arr[i].getAttribute(name);
					case 'object':
						for (key in name) {
							arr[i].setAttribute(key, name[key]);
						}
						break;
				}
			} else if (name && value) {
				arr[i].setAttribute(name, value);
			}
		}
		return arr;
	},
	props: function(name, value, el) {
		var arr = (el) ? [el] : this,
			key;
		for (var i=0, il=arr.length; i<il; i++) {
			if (!value) {
				switch (typeof (name)) {
					case 'string':
						return arr[i][name];
					case 'object':
						for (key in name) {
							arr[i][key] = name[key];
						}
						break;
				}
			} else if (name && value) {
				arr[i][name] = value;
			}
		}
		return arr;
	},
	nodeName: function () {
		return this.length ? this[0].nodeName.toLowerCase() : undefined;
	},
	parent: function () {
		return this.parents();
	},
	parents: function (selector) {
		var found = [],
			match, el;
		selector = selector || '*';
		for (var i=0, il=this.length; i<il; i++) {
			el = this[i].parentNode;
			match = false;
			while (!match && el.nodeType !== 9) {
				if (el.matches(selector)) {
					found.push(el);
					break;
				}
				el = el.parentNode;
			}
		}
		return jr(found);
	},
	clone: function (deep) {
		return this.length ? this[0].cloneNode(deep) : false;
	},
	insert: function(type, source, el) {
		var arr = (el)? [el] : this,
			new_arr = [],
			isStr = typeof(source) === 'string',
			div = document.createElement('div'),
			moveEl,
			movedEl,
			moveAccNr;
		if (isStr) div.innerHTML = source;
		else {
			source = (source.nodeType)? source : source[0];
			div.appendChild(div.cloneNode(false));
		}
		for (var i=0, il=arr.length; i<il; i++) {
			for (var j=0, jl=div.childNodes.length; j<jl; j++) {
				moveEl = isStr ? div.childNodes[j].cloneNode(true) : source ;
				moveAccNr = moveEl[system.id];
				switch (type) {
					case 'before':
						if (isAdjacentSibling(arr[i], moveEl) === -1) continue;
						movedEl = arr[i].parentNode.insertBefore(moveEl, arr[i]);
						break;
					case 'after':
						if (isAdjacentSibling(arr[i], moveEl) === 1) continue;
						movedEl = arr[i].parentNode.insertBefore(moveEl, arr[i].nextSibling);
						break;
					case 'append':
						movedEl = arr[i].appendChild(moveEl);
						break;
					case 'prepend':
						movedEl = arr[i].insertBefore(moveEl, arr[i].firstChild);
						break;
				}
				movedEl[system.id] = moveAccNr;
				new_arr.push(movedEl);
			}
		}
		//important to return new instance of junior along with appended element
		return jr(new_arr);
	},
	before: function(str, el) {
		return this.insert('before', str, el);
	},
	after: function(str, el) {
		return this.insert('after', str, el);
	},
	prepend: function(str, el) {
		return this.insert('prepend', str, el);
	},
	append: function(str, el) {
		return this.insert('append', str, el);
	},
	focus: function () {
		this[0].focus();
		return this;
	},
	select: function () {
		this[0].focus();
		this[0].select();
		return this;
	},
	remove: function(el) {
		var arr = (el)? [el] : this;
		for (var i=0, il=arr.length; i<il; i++) {
			arr[i].parentNode.removeChild(arr[i]);
		}
		return this;
	},
	nextPrev: function(selector, direction) {
		var found = [],
			el;
		selector = selector || '*';
		for (var i=0, il=this.length; i<il; i++) {
			el = this[i];
			while (el) {
				el = el[direction];
				if (!el) break;
				if (el.nodeType === 1 && el.matches(selector)) {
					found.push(el);
				}
			}
		}
		return jr(found);
	},
	next: function(selector) {
		return this.nextPrev(selector, 'nextSibling');
	},
	prev: function(selector) {
		return this.nextPrev(selector, 'previousSibling');
	},
	on: function (types, selector, callback) {
		for (var i=0, il=this.length; i<il; i++) {
			system.eventManager.addEvent(this[i], types, callback, selector);
		}
		return this;
	},
	bind: function (types, callback) {
		return this.on(types, false, callback);
	},
	unbind: function(types, callback) {
		return this.off(types, false, callback);
	},
	off: function(types, selector, callback) {
		for (var i=0, il=this.length; i<il; i++) {
			system.eventManager.removeEvent(this[i], types, callback, selector);
		}
		return this;
	},
	scrollTo: function(x, y) {
		for (var i=0, il=this.length; i<il; i++) {
			this[i].scrollLeft = x;
			this[i].scrollTop = y;
		}
		return this;
	},
	trigger: function(types, el) {
		var arr = (el)? [el] : this,
			type = types.split(/\s+/),
			i=0, il=arr.length,
			j=0, jl=type.length,
			isNative, isStyle, event, el, listener;

		for (; j<jl; j++) {
			isNative = system.eventManager.nativeEvents.indexOf(type[j]) > -1;
			isStyle = type[j].indexOf('style.') > -1;
			if (isNative) {
				event = document.createEvent('MouseEvents'),
				event.initEvent(type[j], true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);
			} else {
				event = document.createEvent('Event');
				event.initEvent(type[j], true, true);
			}
			for (; i<il; i++) {
				el = arr[i];
				if (isNative) {
					el.dispatchEvent(event);
				} else {
					while (el.nodeType === 1) {
						listener = el['on'+ type[j]];
						if (typeof(listener) === 'function') {
							if (isStyle) event.run73 = {target: el};
							listener.call(el, event);
							if (event.isBubblingCanceled) {
								break;
							}
						}
						if (isStyle) return this;
						el = el.parentNode;
					}
				}
			}
		}
		return this;
	}
};

var jr = function() {
		var new_junior = new Junior();
		return new_junior.find.apply(new_junior, arguments);
	};
// publish junior to global scope
window.jr = jr;

// junior auxiliary
var auxiliary = {
	ajax: function(opt) {
		var xhr = new XMLHttpRequest(),
			type = opt.type || 'GET',
			data = (opt.data) ? JSON.stringify(opt.data) : '';

		xhr.open(type, opt.url +'?'+ Date.now(), true);
		if (opt.withCredentials) {
			xhr.withCredentials = 'true';
		}
		//xhr.setRequestHeader("Cache-Control", "max-age=0");
		//xhr.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
		xhr.onreadystatechange = function () {
			if (this.readyState != 4) return;
			opt.complete.call(this, (this.responseXML || this.responseText));
		};
		xhr.send(data);
	},
	xmlFromString: function(str) {
		var parser = new DOMParser(),
			doc;
		doc = parser.parseFromString(str, 'text/xml');
		return doc;
	},
	extend: function(safe, deposit) {
		var content;
		for (content in deposit) {
			if (!safe[content] || typeof(deposit[content]) !== 'object') {
				safe[content] = deposit[content];
			} else {
				this.extend(safe[content], deposit[content]);
			}
		}
		return safe;
	},
	prettyPrint: function(node) {
		var decl   = '<?xml version="1.0" encoding="utf-8"?>',
			ser    = new XMLSerializer(),
			xstr   = ser.serializeToString(node),
			str    = xstr.trim().replace(/(>)\s*(<)(\/*)/g, '$1\n$2$3'),
			lines  = str.split('\n'),
			indent = -1,
			tabs   = 4,
			i      = 0,
			il     = lines.length,
			start,
			end;
		for (; i<il; i++) {
			if (i === 0 && lines[i].toLowerCase() === decl) continue;
			start = lines[i].match(/<[A-Za-z_\:]+.*?>/g) !== null;
			//start = lines[i].match(/<[^\/]+>/g) !== null;
			end   = lines[i].match(/<\/[\w\:]+>/g) !== null;
			if (lines[i].match(/<.*?\/>/g) !== null) start = end = true;
			if (start) indent++;
			lines[i] = String().fill(indent, '\t') + lines[i];
			if (start && end) indent--;
			if (!start && end) indent--;
		}
		return lines.join('\n').replace(/\t/g, String().fill(tabs, ' '));
	}
};


// private stuff
var system = {
	id: 'absolut-'+ Date.now(),
	init: function() {
		this.eventManager.init();
	},
	bank: {
		guid: 0,
		vault: {},
		dispose: function () {},
		flushAll: function (el) {
			if (!el) return;
			var id = el[system.id];
			delete this.vault[id];
			delete el[system.id];
		},
		empty: function (el, name, selector) {
			var id = el[system.id],
				safe = this.vault[id],
				content = safe ? safe[name] : el.dataset[name];
			if (safe) {
				delete safe[name];
			}
			el.removeAttribute('data-' + name);
			return content;
		},
		balance: function (el, name) {
			var id = el[system.id],
				safe = this.vault[id];
			return safe ? safe[name] : {};
		},
		deposit: function (el, name, value) {
			var id = el[system.id] = el[system.id] || ++this.guid,
				safe = this.vault[id] = this.vault[id] || {}, content, key;
			if (typeof (name) === 'object') {
				system.extend(safe, name);
			} else {
				safe[name] = value;
			}
		}
	},
	eventManager: {
		init: function () {
			this.guid = 1;
			this.nativeEvents = 'blur focus focusin focusout load resize scroll unload click dblclick '+
								'mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave '+
								'change select submit keydown keypress keyup error contextmenu'.split(' ');
		},
		dispose: function () {
			this.flushHandlers(document);
		},
		flushHandlers: function (e) {
			var elem = (e.nodeType) ? e : e.target;
			if (!elem.getElementsByTagName) return;
			var children = elem.getElementsByTagName('*'),
				sysId = system.id,
				i = 0,
				il = children.length;
			for (; i < il; i++) {
				this.removeEvent(children[i]);
				system.bank.flushAll(children[i]);
				delete children[i][sysId];
			}
			system.bank.flushAll(elem[sysId]);
			delete elem[sysId];
			this.removeEvent(elem);
		},
		addEvent: function (elem, types, handler, selector) {
			var type = types.split(/\s+/),
				i = 0,
				il = type.length,
				obj, guid;
			
			handler._guid = handler._guid || ++this.guid;
			obj = {};
			for (; i < il; i++) {
				guid = ++this.guid;
				obj[type[i]] = {};
				obj[type[i]][guid] = {
					guid: guid,
					handler: handler,
					selector: selector
				};
			}
			system.bank.deposit(elem, {
				events: obj
			});
			for (i=0; i<il; i++) {
				if (elem['on' + type[i]] && elem['on' + type[i]] !== this.handleEvent) {
					obj[type[i]][0] = {
						handler: elem['on' + type[i]]
					};
					system.bank.deposit(elem, {
						events: obj
					});
				}
				elem['on' + type[i]] = this.handleEvent;
			}
		},
		removeEvent: function(elem, types, handler, selector) {
			if (arguments.length === 1) {
				system.bank.flushAll(elem);
				return;
			}
			var type = types.split(/\s+/),
				i = 0,
				il = type.length,
				vault = system.bank.vault,
				shelf,
				safe,
				key,
				content;

			if (types.indexOf('DOM') > -1 && elem.removeEventListener) {
				elem.removeEventListener(types, handler, false);
			} else if (types && handler) {
				shelf = vault[elem[system.id]];
				for (; i<il; i++) {
					safe = shelf.events[type[i]];
					for (key in safe) {
						content = safe[key];
						if (content.handler._guid === handler._guid && content.selector === selector) {
							delete safe[key];
							break;
						}
					}
				}
				//delete vault[elem[system.id]];
			}
		},
		handleEvent: function(event) {
			var returnValue = true,
				type = event.type,
				target = event.target,
				handlers = system.bank.balance(this, 'events'),
				_handlers,
				_name,
				_eventHandler,
				_handleSelector;

			if (!handlers) return returnValue;
			_handlers = handlers[type];
			event.stopPropagation = function () {
				this.isBubblingCanceled = true;
			};
			while (target !== null && target !== this) {
				for (_name in _handlers) {
					_eventHandler = _handlers[_name];
					_handleSelector = _eventHandler.selector;
					if (_handleSelector && target.matches(_handleSelector)) {
						if (_eventHandler.handler.call(target, event) === false) {
							returnValue = false;
						}
						if (event.isBubblingCanceled) {
							return returnValue;
						}
					}
				}
				target = target.parentNode;
			}
			if (!event.isBubblingCanceled) {
				for (_name in _handlers) {
					_eventHandler = _handlers[_name];
					if (_eventHandler.selector) continue;
					if (_eventHandler.handler.call(this, event) === false) {
						returnValue = false;
					}
				}
			}
			return returnValue;
		}
	},
	extend: function (safe, deposit) {
		for (var content in deposit) {
			if (!safe[content] || typeof (deposit[content]) !== 'object') {
				safe[content] = deposit[content];
			} else {
				this.extend(safe[content], deposit[content]);
			}
		}
		return safe;
	}
},
// auxillary functions
getParent = function(el, selector) {
	selector = selector || '*';
	var match = false;
	while (!match && el.nodeType !== 9) {
		if (el.matches(selector)) {
			return el;
		}
		el = el.parentNode;
	}
},
getStyle = function (el, name) {
	name = name.replace(/([A-Z]|^ms)/g, "-$1").toLowerCase();
	var value = document.defaultView.getComputedStyle(el, null).getPropertyValue(name);
	if (name === 'opacity') {
		if (getStyle(el, 'display') === 'none') {
			el.style.display = 'block';
			el.style.opacity = '0';
			value = '0';
		}
	}
	if (value === 'auto') {
		switch (name) {
			case 'top':    value = el.offsetTop; break;
			case 'left':   value = el.offsetLeft; break;
			case 'width':  value = el.offsetWidth; break;
			case 'height': value = el.offsetHeight; break;
		}
	}
	return value;
},
fixStyleName = function (name) {
	return name.replace(/-([a-z]|[0-9])/ig, function (m, letter) {
		return (letter + "").toUpperCase();
	});
},
isAdjacentSibling = function(el1, el2) {
	var currParentEl = el1.parentNode,
		currEl = el1,
		isAdjacent = false;
	if (!currParentEl || !el2.parentNode) return isAdjacent;
	while (!isAdjacent && currEl && currParentEl.firstChild !== currEl) {
		currEl = currEl.previousSibling;
		if (currEl.nodeType === 3) continue;
		if (currEl === el2) isAdjacent = -1;
		break;
	}
	currEl = el1;
	while (!isAdjacent && currEl && currParentEl.lastChild !== currEl) {
		currEl = currEl.nextSibling;
		if (currEl.nodeType === 3) continue;
		if (currEl === el2) isAdjacent = 1;
		break;
	}
	return isAdjacent;
};

if (!Element.prototype.matches) {
	Element.prototype.matches = 
		Element.prototype.matchesSelector || 
		Element.prototype.mozMatchesSelector ||
		Element.prototype.msMatchesSelector || 
		Element.prototype.oMatchesSelector || 
		Element.prototype.webkitMatchesSelector ||
		function(s) {
			var matches = (this.document || this.ownerDocument).querySelectorAll(s),
				i = matches.length;
			while (--i >= 0 && matches.item(i) !== this) {}
			return i > -1;            
		};
}

// inititate system object
system.init();

// extending Object (backwards compatibility)
if (typeof Object.create !== 'function') {
	Object.create = function(o, props) {
		function F() {}
		F.prototype = o;
		if (typeof(props) === 'object') {
			for (var prop in props) {
				if (props.hasOwnProperty((prop))) {
					F[prop] = props[prop];
				}
			}
		}
		return new F();
	};
}
// extending ARRAY with useful methods
if (!Array.prototype.hasOwnProperty('removeDuplicates')) {
	Array.prototype.removeDuplicates = function () {
		for (var i=0, il=this.length, unique=[]; i<il; i++) {
			if (unique.indexOf(this[i]) === -1) {
				unique.push(this[i]);
			}
		}
		return unique;
	};
}
if (!Array.prototype.hasOwnProperty('difference')) {
	Array.prototype.difference = function(a) {
		return this.filter(function(i) {return (a.indexOf(i) === -1);});
	};
}
// extending STRING
if (!String.prototype.fill) {
	String.prototype.fill = function(i,c) {
		var str = this;
		c = c || ' ';
		for (; str.length<i; str+=c){}
		return str;
	};
}
if (!String.prototype.trim) {
	String.prototype.trim = function () {
		return this.replace(/^\s+|\s+$/gm, '');
	};
}
if (!String.prototype.sprintf) {
	String.prototype.sprintf = function () {
		var args = Array.prototype.slice.call(arguments);
		return this.replace(/%s/g, function() { return args.shift();});
	};
}
// extending DATE
if (!Date.stamp) {
	Date.stamp = function (s) {
		var fn = function(i) {return i < 10 ? '0'+ i : i;},
			d = s ? new Date(s) : new Date();
		return d.getFullYear() +'-'+ fn(d.getMonth() + 1) +'-'+ fn(d.getDate()) +' '+ fn(d.getHours()) +':'+ fn(d.getMinutes()) +':'+ fn(d.getSeconds());
	};
}
// extending the XML object
Document.prototype.selectNodes = function(xpath, xnode) {
	if (!xnode) xnode = this;
	var ns = this.createNSResolver(this.documentElement),
		qI = this.evaluate(xpath, xnode, ns, XPathResult.ORDERED_NODE_SNAPSHOT_TYPE, null),
		res = [],
		len = qI.snapshotLength;
	while (len--) res[len] = qI.snapshotItem(len);
	return res;
};
Document.prototype.selectSingleNode = function(xpath, xnode) {
	if(!xnode) xnode = this;
	var xI = this.selectNodes(xpath, xnode);
	return (xI.length > 0)? xI[0] : null ;
};
Element.prototype.selectNodes = function(xpath) {
	return this.ownerDocument.selectNodes(xpath, this);
};
Element.prototype.selectSingleNode = function(xpath) {
	return this.ownerDocument.selectSingleNode(xpath, this);
};
Node.prototype.__defineGetter__('xml', function() {
	var ser    = new XMLSerializer(),
		xstr   = ser.serializeToString(this),
		str    = xstr.trim().replace(/(>)\s*(<)(\/*)/g, '$1\n$2$3'),
		lines  = str.split('\n'),
		indent = -1,
		i      = 0,
		il     = lines.length,
		start,
		end;
	for (; i<il; i++) {
		if (i === 0 && lines[i].toLowerCase() === '<?xml version="1.0" encoding="utf-8"?>') continue;
		start = lines[i].match(/<[A-Za-z_\:]+.*?>/g) !== null;
		end   = lines[i].match(/<\/[\w\:]+>/g) !== null;
		if (lines[i].match(/<.*?\/>/g) !== null) start = end = true;
		if (start) indent++;
		lines[i] = String().fill(indent, '\t') + lines[i];
		if (start && end) indent--;
		if (!start && end) indent--;
	}
	return lines.join('\n').replace(/\t/g, String().fill(4, ' '));
});

for (var fn in auxiliary) {
	jr[fn] = auxiliary[fn];
}


(function(win, doc, $) {
	'use strict';

	var poly1 = [[30, 30], [300, 30], [300, 410], [30, 250]],
		poly2 = [[130, 130], [400, 130], [400, 350], [130, 350]];

	var demo = {
		// difference
		// intersection
		// union
		// xor
		operation: 'difference',
		init: function() {
			// fast references
			this.doc = $(doc);
			this.vertices = {
				poly1: poly1,
				poly2: poly2
			};
			this.vertexRadius = 10;

			// initate it all
			for (var name in this) {
				if (typeof(this[name].init) === 'function') {
					this[name].init(this);
				}
			}

			// initial operation
			this.doEvent('perform-operation');

			// a few event handlers
			this.doc.bind('mouseup mousedown mousemove', this.doEvent);
			this.doc.on('click', '[data-cmd]', this.doEvent).trigger('mousemove');
		},
		doEvent: function(event, el, orgEvent) {
			var self = demo,
				cmd = (typeof event === 'string') ? event: event.type,
				radius = self.vertexRadius,
				mx,
				my,
				vertices = self.vertices,
				srcEl,
				vx,
				len,
				i, il, res,
				ox, oy,
				isVertex,
				vertex;
			//console.log(cmd);
			switch(cmd) {
				// native events
				case 'click':
					srcEl = $(this);
					if (!srcEl) return;
					// stop default behavior
					event.preventDefault();
					// forward event
					return self.doEvent(srcEl.attr('data-cmd'), srcEl, event);
				case 'mousedown':
					// prevent default behaviour
					event.preventDefault();
				case 'mousemove':
					mx = event.pageX - self.draw.rect.left;
					my = event.pageY - self.draw.rect.top;
					if (cmd === 'mousemove' && (vertices.poly1._selected > -1 || vertices.poly2._selected > -1)) {
						ox = mx + self._clickX;
						oy = my + self._clickY;
						if (vertices.poly1._selected > -1) vertices.poly1[vertices.poly1._selected] = [ox, oy];
						if (vertices.poly2._selected > -1) vertices.poly2[vertices.poly2._selected] = [ox, oy];

						self.doEvent('perform-operation');
					} else {
						// polygon 1 vertices
						vx = vertices.poly1;
						len = vx.length;
						vx._selected = -1;
						vx._hovered = -1;
						while (len--) {
							ox = vx[len][0] - mx;
							oy = vx[len][1] - my;
							isVertex = Math.sqrt((ox * ox) + (oy * oy)) <= radius;
							if (isVertex) {
								if (cmd === 'mousedown') {
									vx._selected = len;
									self._clickX = ox;
									self._clickY = oy;
								} else {
									vx._hovered = len;
								}
								break;
							}
						}
						// polygon 2 vertices
						vx = vertices.poly2;
						len = vx.length;
						vx._selected = -1;
						vx._hovered = -1;
						while (len--) {
							ox = vx[len][0] - mx;
							oy = vx[len][1] - my;
							isVertex = Math.sqrt((ox * ox) + (oy * oy)) <= radius;
							if (isVertex) {
								if (cmd === 'mousedown') {
									vx._selected = len;
									self._clickX = ox;
									self._clickY = oy;
								} else {
									vx._hovered = len;
								}
								break;
							}
						}
					}
					// painter
					self.draw.clip();
					break;
				case 'mouseup':
					vertices.poly1._selected = -1;
					vertices.poly2._selected = -1;
					break;
				// custom events
				case 'perform-operation':
					self.clip = polyop.clip(self.operation, poly1, poly2);
					break;
				case 'operation-difference':
				case 'operation-intersection':
				case 'operation-union':
				case 'operation-xor':
					self.operation = cmd.split('-')[1];
					self.doEvent('perform-operation');
					self.doc.trigger('mousemove');

					el.parent().find('.active').removeClass('active');
					el.addClass('active');
					break;
			}
		},
		draw: {
			init: function() {
				this.cvs = doc.getElementById('canvas');
				this.ctx = this.cvs.getContext('2d');
				this.rect = this.cvs.getBoundingClientRect()
			},
			clip: function() {
				var ctx = this.ctx,
					clip = demo.clip,
					poly,
					il, i,
					jl, j;

				// clear canvas
				ctx.clearRect(0, 0, 1e4, 1e4);

				// polygon
				for (i=0, il=clip.length; i<il; i++) {
					poly = clip[i].vertices;

					// set clip color
					ctx.fillStyle = clip[i].isHole ? '#fff' : 'rgba(200,0,0,0.35)';

					ctx.beginPath();
					ctx.moveTo(poly[0][0], poly[0][1]);
					for (j=1, jl=poly.length; j<jl; j++) {
						ctx.lineTo(poly[j][0], poly[j][1]);
					}
					ctx.closePath();
					ctx.fill();
				}

				this.poly(demo.vertices);
			},
			poly: function(vertices) {
				var ctx = this.ctx,
					il, i;

				ctx.lineWidth = 3;
				ctx.strokeStyle = '#369';
				
				// polygon 1
				ctx.beginPath();
				ctx.moveTo(vertices.poly1[0][0], vertices.poly1[0][1]);
				for (i=1, il=vertices.poly1.length; i<il; i++) {
					ctx.lineTo(vertices.poly1[i][0], vertices.poly1[i][1]);
				}
				ctx.closePath();
				ctx.stroke();

				// polygon 2
				ctx.beginPath();
				ctx.moveTo(vertices.poly2[0][0], vertices.poly2[0][1]);
				for (i=1, il=vertices.poly2.length; i<il; i++) {
					ctx.lineTo(vertices.poly2[i][0], vertices.poly2[i][1]);
				}
				ctx.closePath();
				ctx.stroke();

				this.vertex(vertices);
			},
			vertex: function(vertices) {
				var _selected,
					_hovered,
					ctx = this.ctx,
					radius = demo.vertexRadius / 2,
					il, i,
					pi2 = Math.PI * 2;

				// set line width
				ctx.lineWidth = 7;

				// polygon vertices 1
				_selected = vertices.poly1._selected;
				_hovered = vertices.poly1._hovered;
				for (i=0, il=vertices.poly1.length; i<il; i++) {
					ctx.beginPath();
					switch (i) {
						case _hovered:
						case _selected: ctx.strokeStyle = 'rgba(100,100,200,0.65)'; break;
						default: ctx.strokeStyle = 'rgba(100,100,100,0.85)';
					}
					ctx.fillStyle = '#fff';
					
					ctx.arc(vertices.poly1[i][0], vertices.poly1[i][1], radius, 0, pi2);
					ctx.stroke();
					ctx.fill();
				}


				// polygon vertices 2
				_selected = vertices.poly2._selected;
				_hovered = vertices.poly2._hovered;
				for (i=0, il=vertices.poly2.length; i<il; i++) {
					ctx.beginPath();
					switch (i) {
						case _hovered:
						case _selected: ctx.strokeStyle = 'rgba(100,100,200,0.65)'; break;
						default: ctx.strokeStyle = 'rgba(100,100,100,0.85)';
					}
					ctx.fillStyle = '#fff';
					
					ctx.arc(vertices.poly2[i][0], vertices.poly2[i][1], radius, 0, pi2);
					ctx.stroke();
					ctx.fill();
				}
			}
		}
	};

	window.onload = demo.init.bind(demo);

})(window, document, jr);
