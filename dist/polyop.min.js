function equals(t,e){var i;for(i in t)if("undefined"==typeof e[i])return!1;for(i in t)if(t[i])switch(typeof t[i]){case"object":if(!equals(t[i],e[i]))return!1;break;case"function":if("undefined"==typeof e[i]||"equals"!==i&&t[i].toString()!==e[i].toString())return!1;break;default:if(t[i]!==e[i])return!1}else if(e[i])return!1;for(i in e)if("undefined"==typeof t[i])return!1;return!0}var UTIL={},GEOMETRY={},Point=function(t,e){this.x=t,this.y=e};UTIL.ArrayHelper=function(){};var static=UTIL.ArrayHelper;static.create2DArray=function(t){for(var e=[],i=0;t>i;i++)e[i]=[];return e},static.valueEqual=function(t,e){return t===e?!0:equals(t,e)?!0:!1},static.sortPointsClockwise=function(t){var e,i,n,l,o,p,r=!1,u=null,s=null,E=null,a=null,C=t;for(t instanceof ArrayList&&(t=t.toArray(),r=!0),i=0,n=t.length;n>i;i++)l=t[i],(null===u||u.y>l.y||u.y===l.y&&l.x<u.x)&&(u=l),(null===s||s.y<l.y||s.y===l.y&&l.x>s.x)&&(s=l),(null===a||a.x<l.x||a.x===l.x&&l.y<a.y)&&(a=l),(null===E||E.x>l.x||E.x===l.x&&l.y>E.y)&&(E=l,e=i);if(e>0){for(C=[],o=0,i=e,n=t.length;n>i;i++)C[o++]=t[i];for(i=0;e>i;i++)C[o++]=t[i];t=C}for(p=!1,i=0,n=t.length;n>i;i++){if(l=t[i],equals(l,s)){p=!0;break}if(equals(l,u))break}if(p){for(C=[],C[0]=t[0],o=1,i=t.length-1;i>0;i--)C[o++]=t[i];t=C}return r?new ArrayList(t):t};var ArrayHelper=UTIL.ArrayHelper;UTIL.ArrayList=function(t){this._array=[],null!=t&&(this._array=t)},UTIL.ArrayList.prototype={add:function(t){this._array.push(t)},get:function(t){return this._array[t]},size:function(){return this._array.length},clear:function(){this._array=[]},equals:function(t){if(this._array.length!=t.size())return!1;for(var e=0,i=this._array.length;i>e;e++)if(!ArrayHelper.valueEqual(this._array[e],t.get(e)))return!1;return!0},hashCode:function(){return 0},isEmpty:function(){return 0==this._array.length},toArray:function(){return this._array}},GEOMETRY.Clip=function(){},GEOMETRY.Clip.DEBUG=!1,GEOMETRY.Clip.GPC_EPSILON=2.220446049250313e-16,GEOMETRY.Clip.GPC_VERSION="2.31",GEOMETRY.Clip.LEFT=0,GEOMETRY.Clip.RIGHT=1,GEOMETRY.Clip.ABOVE=0,GEOMETRY.Clip.BELOW=1,GEOMETRY.Clip.CLIP=0,GEOMETRY.Clip.SUBJ=1;var static=GEOMETRY.Clip;static.intersection=function(t,e,i){return(null==i||void 0==i)&&(i="PolyDefault"),Clip.clip(OperationType.GPC_INT,t,e,i)},static.union=function(t,e,i){return(null==i||void 0==i)&&(i="PolyDefault"),Clip.clip(OperationType.GPC_UNION,t,e,i)},static.xor=function(t,e,i){return(null==i||void 0==i)&&(i="PolyDefault"),Clip.clip(OperationType.GPC_XOR,t,e,i)},static.difference=function(t,e,i){return(null==i||void 0==i)&&(i="PolyDefault"),Clip.clip(OperationType.GPC_DIFF,e,t,i)},static.intersection=function(t,e){return Clip.clip(OperationType.GPC_INT,t,e,"PolyDefault.class")},static.createNewPoly=function(t){switch(t){case"PolySimple":return new PolySimple;case"PolyDefault":return new PolyDefault;case"PolyDefault.class":return new PolyDefault}return null},static.clip=function(t,e,i,n){var l=Clip.createNewPoly(n);if(e.isEmpty()&&i.isEmpty()||e.isEmpty()&&(t===OperationType.GPC_INT||t===OperationType.GPC_DIFF)||i.isEmpty()&&t===OperationType.GPC_INT)return l;t!==OperationType.GPC_INT&&t!==OperationType.GPC_DIFF||e.isEmpty()||i.isEmpty()||Clip.minimax_test(e,i,t);var o=new LmtTable,p=new ScanBeamTreeEntries,r=null,u=null;if(e.isEmpty()||(r=Clip.build_lmt(o,p,e,Clip.SUBJ,t)),i.isEmpty()||(u=Clip.build_lmt(o,p,i,Clip.CLIP,t)),null==o.top_node)return l;var s=p.build_sbt(),E=[];E[0]=Clip.LEFT,E[1]=Clip.LEFT,t===OperationType.GPC_DIFF&&(E[Clip.CLIP]=Clip.RIGHT);for(var a=o.top_node,C=new TopPolygonNode,y=new AetTree,d=0;d<s.length;){var f=s[d++],O=0,c=0;if(d<s.length&&(O=s[d],c=O-f),null!=a&&a.y==f){for(var P=a.first_bound;null!=P;P=P.next_bound)Clip.add_edge_to_aet(y,P);a=a.next}var x=-Number.MAX_VALUE,T=y.top_node,h=y.top_node;y.top_node.bundle[Clip.ABOVE][y.top_node.type]=y.top_node.top.y!=f?1:0,y.top_node.bundle[Clip.ABOVE][0==y.top_node.type?1:0]=0,y.top_node.bstate[Clip.ABOVE]=BundleState.UNBUNDLED;for(var B=y.top_node.next;null!=B;B=B.next){var _=B.type,g=0==B.type?1:0;B.bundle[Clip.ABOVE][_]=B.top.y!=f?1:0,B.bundle[Clip.ABOVE][g]=0,B.bstate[Clip.ABOVE]=BundleState.UNBUNDLED,1==B.bundle[Clip.ABOVE][_]&&(Clip.EQ(T.xb,B.xb)&&Clip.EQ(T.dx,B.dx)&&T.top.y!=f&&(B.bundle[Clip.ABOVE][_]^=T.bundle[Clip.ABOVE][_],B.bundle[Clip.ABOVE][g]=T.bundle[Clip.ABOVE][g],B.bstate[Clip.ABOVE]=BundleState.BUNDLE_HEAD,T.bundle[Clip.ABOVE][Clip.CLIP]=0,T.bundle[Clip.ABOVE][Clip.SUBJ]=0,T.bstate[Clip.ABOVE]=BundleState.BUNDLE_TAIL),T=B)}var L=[];L[Clip.CLIP]=HState.NH,L[Clip.SUBJ]=HState.NH;var b=[];b[Clip.CLIP]=0,b[Clip.SUBJ]=0;for(var I=null,P=y.top_node;null!=P;P=P.next){if(b[Clip.CLIP]=P.bundle[Clip.ABOVE][Clip.CLIP]+(P.bundle[Clip.BELOW][Clip.CLIP]<<1),b[Clip.SUBJ]=P.bundle[Clip.ABOVE][Clip.SUBJ]+(P.bundle[Clip.BELOW][Clip.SUBJ]<<1),0!=b[Clip.CLIP]||0!=b[Clip.SUBJ]){P.bside[Clip.CLIP]=E[Clip.CLIP],P.bside[Clip.SUBJ]=E[Clip.SUBJ];var M=!1,m=0,R=0,S=0,G=0;if(t===OperationType.GPC_DIFF||t===OperationType.GPC_INT?(M=0!=b[Clip.CLIP]&&(0!=E[Clip.SUBJ]||0!=L[Clip.SUBJ])||0!=b[Clip.SUBJ]&&(0!=E[Clip.CLIP]||0!=L[Clip.CLIP])||0!=b[Clip.CLIP]&&0!=b[Clip.SUBJ]&&E[Clip.CLIP]==E[Clip.SUBJ],m=0!=E[Clip.CLIP]&&0!=E[Clip.SUBJ]?1:0,R=0!=(E[Clip.CLIP]^0!=P.bundle[Clip.ABOVE][Clip.CLIP]&&E[Clip.SUBJ]^P.bundle[Clip.ABOVE][Clip.SUBJ])?1:0,S=0!=(E[Clip.CLIP]^(L[Clip.CLIP]!=HState.NH?1:0))&&0!=(E[Clip.SUBJ]^(L[Clip.SUBJ]!=HState.NH?1:0))?1:0,G=0!=(E[Clip.CLIP]^(L[Clip.CLIP]!=HState.NH?1:0)^P.bundle[Clip.BELOW][Clip.CLIP])&&0!=(E[Clip.SUBJ]^(L[Clip.SUBJ]!=HState.NH?1:0)^P.bundle[Clip.BELOW][Clip.SUBJ])?1:0):t===OperationType.GPC_XOR?(M=0!=b[Clip.CLIP]||0!=b[Clip.SUBJ],m=E[Clip.CLIP]^E[Clip.SUBJ],R=E[Clip.CLIP]^P.bundle[Clip.ABOVE][Clip.CLIP]^(E[Clip.SUBJ]^P.bundle[Clip.ABOVE][Clip.SUBJ]),S=E[Clip.CLIP]^(L[Clip.CLIP]!=HState.NH?1:0)^(E[Clip.SUBJ]^(L[Clip.SUBJ]!=HState.NH?1:0)),G=E[Clip.CLIP]^(L[Clip.CLIP]!=HState.NH?1:0)^P.bundle[Clip.BELOW][Clip.CLIP]^(E[Clip.SUBJ]^(L[Clip.SUBJ]!=HState.NH?1:0)^P.bundle[Clip.BELOW][Clip.SUBJ])):t===OperationType.GPC_UNION&&(M=!((0==b[Clip.CLIP]||0!=E[Clip.SUBJ]&&0==L[Clip.SUBJ])&&(0==b[Clip.SUBJ]||0!=E[Clip.CLIP]&&0==L[Clip.CLIP])&&(0==b[Clip.CLIP]||0==b[Clip.SUBJ]||E[Clip.CLIP]!=E[Clip.SUBJ])),m=0!=E[Clip.CLIP]||0!=E[Clip.SUBJ]?1:0,R=0!=(E[Clip.CLIP]^P.bundle[Clip.ABOVE][Clip.CLIP])||E[Clip.SUBJ]^0!=P.bundle[Clip.ABOVE][Clip.SUBJ]?1:0,S=0!=(E[Clip.CLIP]^(L[Clip.CLIP]!=HState.NH?1:0))||0!=(E[Clip.SUBJ]^(L[Clip.SUBJ]!=HState.NH?1:0))?1:0,G=0!=(E[Clip.CLIP]^(L[Clip.CLIP]!=HState.NH?1:0)^P.bundle[Clip.BELOW][Clip.CLIP])||0!=(E[Clip.SUBJ]^(L[Clip.SUBJ]!=HState.NH?1:0)^P.bundle[Clip.BELOW][Clip.SUBJ])?1:0),E[Clip.CLIP]^=P.bundle[Clip.ABOVE][Clip.CLIP],E[Clip.SUBJ]^=P.bundle[Clip.ABOVE][Clip.SUBJ],0!=b[Clip.CLIP]&&(L[Clip.CLIP]=HState.next_h_state[L[Clip.CLIP]][(b[Clip.CLIP]-1<<1)+E[Clip.CLIP]]),0!=b[Clip.SUBJ]&&(L[Clip.SUBJ]=HState.next_h_state[L[Clip.SUBJ]][(b[Clip.SUBJ]-1<<1)+E[Clip.SUBJ]]),M){var v=P.xb,Y=VertexType.getType(S,G,m,R);switch(Y){case VertexType.EMN:case VertexType.IMN:P.outp[Clip.ABOVE]=C.add_local_min(v,f),x=v,I=P.outp[Clip.ABOVE];break;case VertexType.ERI:v!=x&&(I.add_right(v,f),x=v),P.outp[Clip.ABOVE]=I,I=null;break;case VertexType.ELI:P.outp[Clip.BELOW].add_left(v,f),x=v,I=P.outp[Clip.BELOW];break;case VertexType.EMX:v!=x&&(I.add_left(v,f),x=v),C.merge_right(I,P.outp[Clip.BELOW]),I=null;break;case VertexType.ILI:v!=x&&(I.add_left(v,f),x=v),P.outp[Clip.ABOVE]=I,I=null;break;case VertexType.IRI:P.outp[Clip.BELOW].add_right(v,f),x=v,I=P.outp[Clip.BELOW],P.outp[Clip.BELOW]=null;break;case VertexType.IMX:v!=x&&(I.add_right(v,f),x=v),C.merge_left(I,P.outp[Clip.BELOW]),I=null,P.outp[Clip.BELOW]=null;break;case VertexType.IMM:v!=x&&(I.add_right(v,f),x=v),C.merge_left(I,P.outp[Clip.BELOW]),P.outp[Clip.BELOW]=null,P.outp[Clip.ABOVE]=C.add_local_min(v,f),I=P.outp[Clip.ABOVE];break;case VertexType.EMM:v!=x&&(I.add_left(v,f),x=v),C.merge_right(I,P.outp[Clip.BELOW]),P.outp[Clip.BELOW]=null,P.outp[Clip.ABOVE]=C.add_local_min(v,f),I=P.outp[Clip.ABOVE];break;case VertexType.LED:P.bot.y==f&&P.outp[Clip.BELOW].add_left(v,f),P.outp[Clip.ABOVE]=P.outp[Clip.BELOW],x=v;break;case VertexType.RED:P.bot.y==f&&P.outp[Clip.BELOW].add_right(v,f),P.outp[Clip.ABOVE]=P.outp[Clip.BELOW],x=v}}}C.print()}for(var P=y.top_node;null!=P;P=P.next)if(P.top.y==f){var N=P.prev,B=P.next;null!=N?N.next=B:y.top_node=B,null!=B&&(B.prev=N),P.bstate[Clip.BELOW]==BundleState.BUNDLE_HEAD&&null!=N&&N.bstate[Clip.BELOW]==BundleState.BUNDLE_TAIL&&(N.outp[Clip.BELOW]=P.outp[Clip.BELOW],N.bstate[Clip.BELOW]=BundleState.UNBUNDLED,null!=N.prev&&N.prev.bstate[Clip.BELOW]==BundleState.BUNDLE_TAIL&&(N.bstate[Clip.BELOW]=BundleState.BUNDLE_HEAD))}else P.xt=P.top.y==O?P.top.x:P.bot.x+P.dx*(O-P.bot.y);if(d<p.sbt_entries){var V=new ItNodeTable;V.build_intersection_table(y,c);for(var A=V.top_node;null!=A;A=A.next){if(T=A.ie[0],h=A.ie[1],!(0==T.bundle[Clip.ABOVE][Clip.CLIP]&&0==T.bundle[Clip.ABOVE][Clip.SUBJ]||0==h.bundle[Clip.ABOVE][Clip.CLIP]&&0==h.bundle[Clip.ABOVE][Clip.SUBJ])){var U=T.outp[Clip.ABOVE],H=h.outp[Clip.ABOVE],D=A.point.x,J=A.point.y+f,w=0!=T.bundle[Clip.ABOVE][Clip.CLIP]&&0==T.bside[Clip.CLIP]||0!=h.bundle[Clip.ABOVE][Clip.CLIP]&&0!=h.bside[Clip.CLIP]||0==T.bundle[Clip.ABOVE][Clip.CLIP]&&0==h.bundle[Clip.ABOVE][Clip.CLIP]&&0!=T.bside[Clip.CLIP]&&0!=h.bside[Clip.CLIP]?1:0,X=0!=T.bundle[Clip.ABOVE][Clip.SUBJ]&&0==T.bside[Clip.SUBJ]||0!=h.bundle[Clip.ABOVE][Clip.SUBJ]&&0!=h.bside[Clip.SUBJ]||0==T.bundle[Clip.ABOVE][Clip.SUBJ]&&0==h.bundle[Clip.ABOVE][Clip.SUBJ]&&0!=T.bside[Clip.SUBJ]&&0!=h.bside[Clip.SUBJ]?1:0,S=0,G=0,m=0,R=0;t==OperationType.GPC_DIFF||t==OperationType.GPC_INT?(S=0!=w&&0!=X?1:0,G=0!=(w^h.bundle[Clip.ABOVE][Clip.CLIP])&&0!=(X^h.bundle[Clip.ABOVE][Clip.SUBJ])?1:0,m=0!=(w^T.bundle[Clip.ABOVE][Clip.CLIP])&&0!=(X^T.bundle[Clip.ABOVE][Clip.SUBJ])?1:0,R=0!=(w^h.bundle[Clip.ABOVE][Clip.CLIP]^T.bundle[Clip.ABOVE][Clip.CLIP])&&0!=(X^h.bundle[Clip.ABOVE][Clip.SUBJ]^T.bundle[Clip.ABOVE][Clip.SUBJ])?1:0):t==OperationType.GPC_XOR?(S=w^X,G=w^h.bundle[Clip.ABOVE][Clip.CLIP]^(X^h.bundle[Clip.ABOVE][Clip.SUBJ]),m=w^T.bundle[Clip.ABOVE][Clip.CLIP]^(X^T.bundle[Clip.ABOVE][Clip.SUBJ]),R=w^h.bundle[Clip.ABOVE][Clip.CLIP]^T.bundle[Clip.ABOVE][Clip.CLIP]^(X^h.bundle[Clip.ABOVE][Clip.SUBJ]^T.bundle[Clip.ABOVE][Clip.SUBJ])):t==OperationType.GPC_UNION&&(S=0!=w||0!=X?1:0,G=0!=(w^h.bundle[Clip.ABOVE][Clip.CLIP])||0!=(X^h.bundle[Clip.ABOVE][Clip.SUBJ])?1:0,m=0!=(w^T.bundle[Clip.ABOVE][Clip.CLIP])||0!=(X^T.bundle[Clip.ABOVE][Clip.SUBJ])?1:0,R=0!=(w^h.bundle[Clip.ABOVE][Clip.CLIP]^T.bundle[Clip.ABOVE][Clip.CLIP])||0!=(X^h.bundle[Clip.ABOVE][Clip.SUBJ]^T.bundle[Clip.ABOVE][Clip.SUBJ])?1:0);var Y=VertexType.getType(S,G,m,R);switch(Y){case VertexType.EMN:T.outp[Clip.ABOVE]=C.add_local_min(D,J),h.outp[Clip.ABOVE]=T.outp[Clip.ABOVE];break;case VertexType.ERI:null!=U&&(U.add_right(D,J),h.outp[Clip.ABOVE]=U,T.outp[Clip.ABOVE]=null);break;case VertexType.ELI:null!=H&&(H.add_left(D,J),T.outp[Clip.ABOVE]=H,h.outp[Clip.ABOVE]=null);break;case VertexType.EMX:null!=U&&null!=H&&(U.add_left(D,J),C.merge_right(U,H),T.outp[Clip.ABOVE]=null,h.outp[Clip.ABOVE]=null);break;case VertexType.IMN:T.outp[Clip.ABOVE]=C.add_local_min(D,J),h.outp[Clip.ABOVE]=T.outp[Clip.ABOVE];break;case VertexType.ILI:null!=U&&(U.add_left(D,J),h.outp[Clip.ABOVE]=U,T.outp[Clip.ABOVE]=null);break;case VertexType.IRI:null!=H&&(H.add_right(D,J),T.outp[Clip.ABOVE]=H,h.outp[Clip.ABOVE]=null);break;case VertexType.IMX:null!=U&&null!=H&&(U.add_right(D,J),C.merge_left(U,H),T.outp[Clip.ABOVE]=null,h.outp[Clip.ABOVE]=null);break;case VertexType.IMM:null!=U&&null!=H&&(U.add_right(D,J),C.merge_left(U,H),T.outp[Clip.ABOVE]=C.add_local_min(D,J),h.outp[Clip.ABOVE]=T.outp[Clip.ABOVE]);break;case VertexType.EMM:null!=U&&null!=H&&(U.add_left(D,J),C.merge_right(U,H),T.outp[Clip.ABOVE]=C.add_local_min(D,J),h.outp[Clip.ABOVE]=T.outp[Clip.ABOVE])}}0!=T.bundle[Clip.ABOVE][Clip.CLIP]&&(h.bside[Clip.CLIP]=0==h.bside[Clip.CLIP]?1:0),0!=h.bundle[Clip.ABOVE][Clip.CLIP]&&(T.bside[Clip.CLIP]=0==T.bside[Clip.CLIP]?1:0),0!=T.bundle[Clip.ABOVE][Clip.SUBJ]&&(h.bside[Clip.SUBJ]=0==h.bside[Clip.SUBJ]?1:0),0!=h.bundle[Clip.ABOVE][Clip.SUBJ]&&(T.bside[Clip.SUBJ]=0==T.bside[Clip.SUBJ]?1:0);var N=T.prev,B=h.next;if(null!=B&&(B.prev=T),T.bstate[Clip.ABOVE]==BundleState.BUNDLE_HEAD)for(var W=!0;W;)N=N.prev,null!=N?N.bstate[Clip.ABOVE]!=BundleState.BUNDLE_TAIL&&(W=!1):W=!1;null==N?(y.top_node.prev=h,h.next=y.top_node,y.top_node=T.next):(N.next.prev=h,h.next=N.next,N.next=T.next),T.next.prev=N,h.next.prev=h,T.next=B}for(var P=y.top_node;null!=P;P=P.next){var B=P.next,F=P.succ;if(P.top.y==O&&null!=F){F.outp[Clip.BELOW]=P.outp[Clip.ABOVE],F.bstate[Clip.BELOW]=P.bstate[Clip.ABOVE],F.bundle[Clip.BELOW][Clip.CLIP]=P.bundle[Clip.ABOVE][Clip.CLIP],F.bundle[Clip.BELOW][Clip.SUBJ]=P.bundle[Clip.ABOVE][Clip.SUBJ];var N=P.prev;null!=N?N.next=F:y.top_node=F,null!=B&&(B.prev=F),F.prev=N,F.next=B}else P.outp[Clip.BELOW]=P.outp[Clip.ABOVE],P.bstate[Clip.BELOW]=P.bstate[Clip.ABOVE],P.bundle[Clip.BELOW][Clip.CLIP]=P.bundle[Clip.ABOVE][Clip.CLIP],P.bundle[Clip.BELOW][Clip.SUBJ]=P.bundle[Clip.ABOVE][Clip.SUBJ],P.xb=P.xt;P.outp[Clip.ABOVE]=null}}}return l=C.getResult(n)},static.EQ=function(t,e){return Math.abs(t-e)<=Clip.GPC_EPSILON},static.PREV_INDEX=function(t,e){return(t-1+e)%e},static.NEXT_INDEX=function(t,e){return(t+1)%e},static.OPTIMAL=function(t,e){return t.getY(Clip.PREV_INDEX(e,t.getNumPoints()))!=t.getY(e)||t.getY(Clip.NEXT_INDEX(e,t.getNumPoints()))!=t.getY(e)},static.create_contour_bboxes=function(t){for(var e,i=[],n=t.getNumInnerPoly(),l=0;n>l;l++)e=t.getInnerPoly(l),i[l]=e.getBounds();return i},static.minimax_test=function(t,e,i){var n,l,o,p=Clip.create_contour_bboxes(t),r=Clip.create_contour_bboxes(e),u=t.getNumInnerPoly(),s=e.getNumInnerPoly(),E=ArrayHelper.create2DArray(u,s);for(n=0;u>n;n++)for(l=0;s>l;l++)E[n][l]=!(p[n].getMaxX()<r[l].getMinX()||p[n].getMinX()>r[l].getMaxX()||p[n].getMaxY()<r[l].getMinY()||p[n].getMinY()>r[l].getMaxY());for(l=0;s>l;l++){for(o=!1,n=0;!o&&u>n;n++)o=E[n][l];o||e.setContributing(l,!1)}if(i==OperationType.GPC_INT)for(n=0;u>n;n++){for(o=!1,l=0;!o&&s>l;l++)o=E[n][l];o||t.setContributing(n,!1)}},static.bound_list=function(t,e){var i,n,l,o;if(null==t.top_node)return t.top_node=new LmtNode(e),t.top_node;for(i=null,n=t.top_node,l=!1;!l;)e<n.y?(o=n,n=new LmtNode(e),n.next=o,null==i?t.top_node=n:i.next=n,l=!0):e>n.y?null==n.next?(n.next=new LmtNode(e),n=n.next,l=!0):(i=n,n=n.next):l=!0;return n},static.insert_bound=function(t,e){var i,n,l;if(null==t.first_bound)t.first_bound=e;else for(i=!1,n=null,l=t.first_bound;!i;)e.bot.x<l.bot.x?(null==n?t.first_bound=e:n.next_bound=e,e.next_bound=l,i=!0):e.bot.x==l.bot.x?e.dx<l.dx?(null==n?t.first_bound=e:n.next_bound=e,e.next_bound=l,i=!0):null==l.next_bound?(l.next_bound=e,i=!0):(n=l,l=l.next_bound):null==l.next_bound?(l.next_bound=e,i=!0):(n=l,l=l.next_bound)},static.add_edge_to_aet=function(t,e){var i,n,l;if(null==t.top_node)t.top_node=e,e.prev=null,e.next=null;else for(i=t.top_node,n=null,l=!1;!l;)e.xb<i.xb?(e.prev=n,e.next=i,i.prev=e,null==n?t.top_node=e:n.next=e,l=!0):e.xb==i.xb?e.dx<i.dx?(e.prev=n,e.next=i,i.prev=e,null==n?t.top_node=e:n.next=e,l=!0):(n=i,null==i.next?(i.next=e,e.prev=i,e.next=null,l=!0):i=i.next):(n=i,null==i.next?(i.next=e,e.prev=i,e.next=null,l=!0):i=i.next)},static.add_to_sbtree=function(t,e){var i,n;if(null==t.sb_tree)return t.sb_tree=new ScanBeamTree(e),t.sbt_entries++,void 0;for(i=t.sb_tree,n=!1;!n;)i.y>e?null==i.less?(i.less=new ScanBeamTree(e),t.sbt_entries++,n=!0):i=i.less:i.y<e?null==i.more?(i.more=new ScanBeamTree(e),t.sbt_entries++,n=!0):i=i.more:n=!0},static.build_lmt=function(t,e,i,n,l){var o,p,r,u,s,E,a,C,y,d,f,O,c,P,x=new EdgeTable;for(o=0;o<i.getNumInnerPoly();o++)if(p=i.getInnerPoly(o),p.isContributing(0)){r=0,s=0,x=new EdgeTable;for(var P=0;P<p.getNumPoints();P++)Clip.OPTIMAL(p,P)&&(C=p.getX(P),y=p.getY(P),x.addNode(C,y),Clip.add_to_sbtree(e,p.getY(P)),r++);for(var a=0;r>a;a++)if(x.FWD_MIN(a)){for(u=1,E=Clip.NEXT_INDEX(a,r);x.NOT_FMAX(E);)u++,E=Clip.NEXT_INDEX(E,r);for(d=a,f=x.getNode(s),f.bstate[Clip.BELOW]=BundleState.UNBUNDLED,f.bundle[Clip.BELOW][Clip.CLIP]=0,f.bundle[Clip.BELOW][Clip.SUBJ]=0,P=0;u>P;P++)c=x.getNode(s+P),O=x.getNode(d),c.xb=O.vertex.x,c.bot.x=O.vertex.x,c.bot.y=O.vertex.y,d=Clip.NEXT_INDEX(d,r),O=x.getNode(d),c.top.x=O.vertex.x,c.top.y=O.vertex.y,c.dx=(O.vertex.x-c.bot.x)/(c.top.y-c.bot.y),c.type=n,c.outp[Clip.ABOVE]=null,c.outp[Clip.BELOW]=null,c.next=null,c.prev=null,c.succ=u>1&&u-1>P?x.getNode(s+P+1):null,c.pred=u>1&&P>0?x.getNode(s+P-1):null,c.next_bound=null,c.bside[Clip.CLIP]=l==OperationType.GPC_DIFF?Clip.RIGHT:Clip.LEFT,c.bside[Clip.SUBJ]=Clip.LEFT;Clip.insert_bound(Clip.bound_list(t,x.getNode(a).vertex.y),f),s+=u}for(a=0;r>a;a++)if(x.REV_MIN(a)){for(u=1,E=Clip.PREV_INDEX(a,r);x.NOT_RMAX(E);)u++,E=Clip.PREV_INDEX(E,r);for(d=a,f=x.getNode(s),f.bstate[Clip.BELOW]=BundleState.UNBUNDLED,f.bundle[Clip.BELOW][Clip.CLIP]=0,f.bundle[Clip.BELOW][Clip.SUBJ]=0,P=0;u>P;P++)c=x.getNode(s+P),O=x.getNode(d),c.xb=O.vertex.x,c.bot.x=O.vertex.x,c.bot.y=O.vertex.y,d=Clip.PREV_INDEX(d,r),O=x.getNode(d),c.top.x=O.vertex.x,c.top.y=O.vertex.y,c.dx=(O.vertex.x-c.bot.x)/(c.top.y-c.bot.y),c.type=n,c.outp[Clip.ABOVE]=null,c.outp[Clip.BELOW]=null,c.next=null,c.prev=null,c.succ=u>1&&u-1>P?x.getNode(s+P+1):null,c.pred=u>1&&P>0?x.getNode(s+P-1):null,c.next_bound=null,c.bside[Clip.CLIP]=l==OperationType.GPC_DIFF?Clip.RIGHT:Clip.LEFT,c.bside[Clip.SUBJ]=Clip.LEFT;Clip.insert_bound(Clip.bound_list(t,x.getNode(a).vertex.y),f),s+=u}}else p.setContributing(0,!0);return x},static.add_st_edge=function(t,e,i,n){var l,o,p,r,u;return null==t?t=new StNode(i,null):(l=t.xt-t.xb-(i.xt-i.xb),i.xt>=t.xt||i.dx==t.dx||Math.abs(l)<=Clip.GPC_EPSILON?(o=t,t=new StNode(i,o)):(p=(i.xb-t.xb)/l,r=t.xb+p*(t.xt-t.xb),u=p*n,e.top_node=Clip.add_intersection(e.top_node,t.edge,i,r,u),t.prev=Clip.add_st_edge(t.prev,e,i,n))),t},static.add_intersection=function(t,e,i,n,l){var o;return null==t?t=new ItNode(e,i,n,l,null):t.point.y>l?(o=t,t=new ItNode(e,i,n,l,o)):t.next=Clip.add_intersection(t.next,e,i,n,l),t},GEOMETRY.AetTree=function(){this.top_node=null},GEOMETRY.AetTree.prototype.print=function(){for(var t=this.top_node;null!=t;t=t.next);},GEOMETRY.BundleState=function(t){this.m_State=t},GEOMETRY.BundleState.UNBUNDLED=new GEOMETRY.BundleState("UNBUNDLED"),GEOMETRY.BundleState.BUNDLE_HEAD=new GEOMETRY.BundleState("BUNDLE_HEAD"),GEOMETRY.BundleState.BUNDLE_TAIL=new GEOMETRY.BundleState("BUNDLE_TAIL"),GEOMETRY.BundleState.prototype.toString=function(){return this.m_State},GEOMETRY.EdgeNode=function(){this.vertex=new Point,this.bot=new Point,this.top=new Point,this.xb,this.xt,this.dx,this.type,this.bundle=ArrayHelper.create2DArray(2,2),this.bside=[],this.bstate=[],this.outp=[],this.prev,this.next,this.pred,this.succ,this.next_bound},GEOMETRY.EdgeTable=function(){this.m_List=new ArrayList},GEOMETRY.EdgeTable.prototype={addNode:function(t,e){var i=new EdgeNode;i.vertex.x=t,i.vertex.y=e,this.m_List.add(i)},getNode:function(t){return this.m_List.get(t)},FWD_MIN:function(t){var e=this.m_List,i=e.get(Clip.PREV_INDEX(t,e.size())),n=e.get(Clip.NEXT_INDEX(t,e.size())),l=e.get(t);return i.vertex.y>=l.vertex.y&&n.vertex.y>l.vertex.y},NOT_FMAX:function(t){var e=this.m_List,i=e.get(Clip.NEXT_INDEX(t,e.size())),n=e.get(t);return i.vertex.y>n.vertex.y},REV_MIN:function(t){var e=this.m_List,i=e.get(Clip.PREV_INDEX(t,e.size())),n=e.get(Clip.NEXT_INDEX(t,e.size())),l=e.get(t);return i.vertex.y>l.vertex.y&&n.vertex.y>=l.vertex.y},NOT_RMAX:function(t){var e=this.m_List,i=e.get(Clip.PREV_INDEX(t,e.size())),n=e.get(t);return i.vertex.y>n.vertex.y}},GEOMETRY.HState=function(){},GEOMETRY.HState.NH=0,GEOMETRY.HState.BH=1,GEOMETRY.HState.TH=2;var NH=GEOMETRY.HState.NH,BH=GEOMETRY.HState.BH,TH=GEOMETRY.HState.TH;GEOMETRY.HState.next_h_state=[[BH,TH,TH,BH,NH,NH],[NH,NH,NH,NH,TH,TH],[NH,NH,NH,NH,BH,BH]],GEOMETRY.IntersectionPoint=function(t,e,i){this.polygonPoint1=t,this.polygonPoint2=e,this.intersectionPoint=i},GEOMETRY.IntersectionPoint.prototype.toString=function(){return"P1 :"+polygonPoint1.toString()+" P2:"+polygonPoint2.toString()+" IP:"+intersectionPoint.toString()},GEOMETRY.ItNode=function(t,e,i,n,l){this.ie=[],this.point=new Point(i,n),this.next=l,this.ie[0]=t,this.ie[1]=e},GEOMETRY.ItNodeTable=function(){this.top_node},GEOMETRY.ItNodeTable.prototype.build_intersection_table=function(t,e){var i,n=null;for(i=t.top_node;null!=i;i=i.next)(i.bstate[Clip.ABOVE]==BundleState.BUNDLE_HEAD||0!=i.bundle[Clip.ABOVE][Clip.CLIP]||0!=i.bundle[Clip.ABOVE][Clip.SUBJ])&&(n=Clip.add_st_edge(n,this,i,e))},GEOMETRY.Line=function(){this.start,this.end},GEOMETRY.LineHelper=function(){},GEOMETRY.LineHelper.equalPoint=function(t,e){return t[0]==e[0]&&t[1]==e[1]},GEOMETRY.LineHelper.equalVertex=function(t,e,i,n){return GEOMETRY.LineHelper.equalPoint(t,i)&&GEOMETRY.LineHelper.equalPoint(e,n)||GEOMETRY.LineHelper.equalPoint(t,n)&&GEOMETRY.LineHelper.equalPoint(e,i)},GEOMETRY.LineHelper.distancePoints=function(t,e){return Math.sqrt((e[0]-t[0])*(e[0]-t[0])+(e[1]-t[1])*(e[1]-t[1]))},GEOMETRY.LineHelper.clonePoint=function(t){return[t[0],t[1]]},GEOMETRY.LineHelper.cloneLine=function(t){for(var e=[],i=t.length,n=0;i>n;n++)e[n]=[t[n][0],t[n][1]];return e},GEOMETRY.LineHelper.addLineToLine=function(t,e){for(var i=e.length,n=0;i>n;n++)t.push(clonePoint(e[n]))},GEOMETRY.LineHelper.roundPoint=function(t){t[0]=Math.round(t[0]),t[1]=Math.round(t[1])},GEOMETRY.LineHelper.lineIntersectLine=function(t,e,i,n,l){var o,p,r,u,s,E,a,C;if(null==l&&(l=!0),r=e.y-t.y,s=t.x-e.x,a=e.x*t.y-t.x*e.y,u=n.y-i.y,E=i.x-n.x,C=n.x*i.y-i.x*n.y,o=r*E-u*s,0==o)return null;if(p=new Point,p.x=(s*C-E*a)/o,p.y=(u*a-r*C)/o,l){if(Math.pow(p.x-e.x+(p.y-e.y),2)>Math.pow(t.x-e.x+(t.y-e.y),2))return null;if(Math.pow(p.x-t.x+(p.y-t.y),2)>Math.pow(t.x-e.x+(t.y-e.y),2))return null;if(Math.pow(p.x-n.x+(p.y-n.y),2)>Math.pow(i.x-n.x+(i.y-n.y),2))return null;if(Math.pow(p.x-i.x+(p.y-i.y),2)>Math.pow(i.x-n.x+(i.y-n.y),2))return null}return new Point(Math.round(p.x),Math.round(p.y))},GEOMETRY.LineIntersection=function(){},GEOMETRY.LineIntersection.iteratePoints=function(t,e,i,n,l){var o,p,r=!0,u=t.length,s=t.indexOf(e),E=t.indexOf(i),a=s,C=[];if(E>s&&(r=!1),r)for(p=0;u>p&&(o=u>p+a?t[p+a]:t[p+a-u],C.push(o),!equals(o,n)&&!equals(o,l));p++);else for(p=u;p>=0&&(o=u>p+a?t[p+a]:t[p+a-u],C.push(o),!equals(o,n)&&!equals(o,l));p--);return C},GEOMETRY.LineIntersection.intersectPoly=function(t,e){for(var i,n,l,o,p,r,u,s,E,a,C,y,d,f,O,c,P=t.getNumPoints(),x=null,T=null,h=-1,B=-1,_=!1,g=e.length,L=1;g>L;L++){for(n=e[L-1],l=e[L],u=0,s=Number.MAX_VALUE,E=-1,r=0;P>r;r++)o=t.getPoint(0==r?P-1:r-1),p=t.getPoint(r),(i=null!=LineHelper.lineIntersectLine(n,l,o,p))&&(E=Point.distance(i,l),E>u&&!_&&(u=E,x=new IntersectionPoint(o,p,i),h=L),s>E&&(s=E,T=new IntersectionPoint(o,p,i),B=L-1));_=null!=x}if(null!=x&&null!=T){for(a=[],a[0]=x.intersectionPoint,r=1,L=h;B>=L;L++)a[r++]=e[L];if(a[a.length-1]=T.intersectionPoint,equals(x.polygonPoint1,T.polygonPoint1)&&equals(x.polygonPoint2,T.polygonPoint2)||equals(x.polygonPoint1,T.polygonPoint2)&&equals(x.polygonPoint2,T.polygonPoint1)){if(C=new PolySimple,C.add(a),d=t.intersection(C),f=t.xor(C),checkPoly(d)&&checkPoly(f))return[d,f]}else if(O=iteratePoints(t.getPoints(),x.polygonPoint1,x.polygonPoint2,T.polygonPoint1,T.polygonPoint2),O=O.concat(a.reverse()),c=iteratePoints(t.getPoints(),x.polygonPoint2,x.polygonPoint1,T.polygonPoint1,T.polygonPoint2),c=c.concat(a),C=new PolySimple,C.add(O),y=new PolySimple,y.add(c),d=t.intersection(C),f=t.intersection(y),checkPoly(d)&&checkPoly(f))return[d,f]}return null},GEOMETRY.LineIntersection.checkPoly=function(t){for(var e,i=0,n=t.getNumInnerPoly(),l=0;n>l;l++){if(e=t.getInnerPoly(l),e.isHole())return!1;if(i++,i>1)return!1}return!0},GEOMETRY.LmtNode=function(t){this.y=t,this.first_bound,this.next},GEOMETRY.LmtTable=function(){this.top_node},GEOMETRY.LmtTable.prototype.print=function(){for(var t=0,e=this.top_node;null!=e;)t++,e=e.next},GEOMETRY.OperationType=function(t){this.m_Type=t},GEOMETRY.OperationType.GPC_DIFF=new GEOMETRY.OperationType("Difference"),GEOMETRY.OperationType.GPC_INT=new GEOMETRY.OperationType("Intersection"),GEOMETRY.OperationType.GPC_XOR=new GEOMETRY.OperationType("Exclusive or"),GEOMETRY.OperationType.GPC_UNION=new GEOMETRY.OperationType("Union"),GEOMETRY.PolyDefault=function(t){null==t&&(t=!1),this.m_IsHole=t,this.m_List=new ArrayList},GEOMETRY.PolyDefault.prototype.equals=function(t){if(!(t instanceof PolyDefault))return!1;var e=t;return this.m_IsHole!=e.m_IsHole?!1:equals(this.m_List,e.m_List)?!0:!1},GEOMETRY.PolyDefault.prototype.hashCode=function(){var t=this.m_List,e=17;return e=37*e+t.hashCode()},GEOMETRY.PolyDefault.prototype.clear=function(){this.m_List.clear()},GEOMETRY.PolyDefault.prototype.add=function(t,e){var i,n,l,o=[];if(o[0]=t,e&&(o[1]=e),2==o.length)this.addPointXY(o[0],o[1]);else if(1==o.length)if(o[0]instanceof Point)this.addPoint(o[0]);else if(o[0]instanceof GEOMETRY.PolySimple)this.addPoly(o[0]);else if(o[0]instanceof Array)if(i=o[0],2==i.length&&i[0]instanceof Number&&i[1]instanceof Number)this.add(i[0],i[1]);else for(n=0,l=o[0].length;l>n;n++)this.add(o[0][n])},GEOMETRY.PolyDefault.prototype.addPointXY=function(t,e){this.addPoint(new Point(t,e))},GEOMETRY.PolyDefault.prototype.addPoint=function(t){var e=this.m_List;0==e.size()&&e.add(new PolySimple),e.get(0).addPoint(t)},GEOMETRY.PolyDefault.prototype.addPoly=function(t){var e=this.m_IsHole,i=this.m_List;if(i.size()>0&&e)throw"ERROR : Cannot add polys to something designated as a hole.";i.add(t)},GEOMETRY.PolyDefault.prototype.isEmpty=function(){return this.m_List.isEmpty()},GEOMETRY.PolyDefault.prototype.getBounds=function(){var t,e=this.m_List;return 0==e.size()?new Rectangle:1==e.size()?(t=this.getInnerPoly(0),t.getBounds()):(console.log("getBounds not supported on complex poly."),void 0)},GEOMETRY.PolyDefault.prototype.getInnerPoly=function(t){return this.m_List.get(t)},GEOMETRY.PolyDefault.prototype.getNumInnerPoly=function(){return this.m_List.size()},GEOMETRY.PolyDefault.prototype.getNumPoints=function(){return this.m_List.get(0).getNumPoints()},GEOMETRY.PolyDefault.prototype.getX=function(t){return this.m_List.get(0).getX(t)},GEOMETRY.PolyDefault.prototype.getPoint=function(t){return this.m_List.get(0).getPoint(t)},GEOMETRY.PolyDefault.prototype.getPoints=function(){return this.m_List.get(0).getPoints()},GEOMETRY.PolyDefault.prototype.isPointInside=function(t){var e,i,n,l=this.m_List;if(!l.get(0).isPointInside(t))return!1;for(e=0,i=l.size();i>e;e++)if(n=l.get(e),n.isHole()&&n.isPointInside(t))return!1;return!0},GEOMETRY.PolyDefault.prototype.getY=function(t){return this.m_List.get(0).getY(t)},GEOMETRY.PolyDefault.prototype.isHole=function(){if(this.m_List.size()>1)throw"Cannot call on a poly made up of more than one poly.";return this.m_IsHole},GEOMETRY.PolyDefault.prototype.setIsHole=function(t){if(this.m_List.size()>1)throw"Cannot call on a poly made up of more than one poly.";this.m_IsHole=t},GEOMETRY.PolyDefault.prototype.isContributing=function(t){return this.m_List.get(t).isContributing(0)},GEOMETRY.PolyDefault.prototype.setContributing=function(t,e){if(1!=this.m_List.size())throw"Only applies to polys of size 1";this.m_List.get(t).setContributing(0,e)},GEOMETRY.PolyDefault.prototype.intersection=function(t){return Clip.intersection(t,this,"PolyDefault")},GEOMETRY.PolyDefault.prototype.union=function(t){return Clip.union(t,this,"PolyDefault")},GEOMETRY.PolyDefault.prototype.xor=function(t){return Clip.xor(t,this,"PolyDefault")},GEOMETRY.PolyDefault.prototype.difference=function(t){return Clip.difference(t,this,"PolyDefault")},GEOMETRY.PolyDefault.prototype.getArea=function(){for(var t,e,i=0,n=getNumInnerPoly(),l=0;n>l;l++)t=getInnerPoly(l),e=t.getArea()*(t.isHole()?-1:1),i+=e;return i},GEOMETRY.PolyDefault.prototype.toString=function(){for(var t,e,i,n,l="",o=this.m_List,p=o.size(),r=0;p>r;r++){for(e=this.getInnerPoly(r),l+="InnerPoly("+r+").hole="+e.isHole(),t=[],i=0,n=e.getNumPoints();n>i;i++)t.push(new Point(e.getX(i),e.getY(i)));for(t=ArrayHelper.sortPointsClockwise(t),i=0,n=t.length;n>i;i++)l+=t[i].toString()}return l},GEOMETRY.Polygon=function(){this.maxTop,this.maxBottom,this.maxLeft,this.maxRight,this.vertices},GEOMETRY.Polygon.prototype.fromArray=function(t){var e,i=0,n=t.length;for(this.vertices=[];n>i;i++)e=t[i],this.vertices.push(new Point(e[0],e[1]))},GEOMETRY.Polygon.prototype.normalize=function(){for(var t,e,i,n,l,o=this.vertices,p=this.vertices,r=o.length,u=0,s=!1;r>u;u++)e=o[u],(null==maxTop||maxTop.y>e.y||maxTop.y==e.y&&e.x<maxTop.x)&&(maxTop=e),(null==maxBottom||maxBottom.y<e.y||maxBottom.y==e.y&&e.x>maxBottom.x)&&(maxBottom=e),(null==maxRight||maxRight.x<e.x||maxRight.x==e.x&&e.y<maxRight.y)&&(maxRight=e),(null==maxLeft||maxLeft.x>e.x||maxLeft.x==e.x&&e.y>maxLeft.y)&&(maxLeft=e,t=u);if(t>0){for(p=[],i=0,u=t,r=o.length;r>u;u++)p[i++]=this.vertices[u];for(u=0;t>u;u++)p[i++]=this.vertices[u];o=p}for(n=0,l=this.vertices.length;l>n;n++){if(e=this.vertices[n],equals(e,maxBottom)){s=!0;break}if(equals(e,maxTop))break}if(s){for(p=[],p[0]=o[0],i=1,u=o.length-1;u>0;u--)p[i++]=this.vertices[u];o=p}},GEOMETRY.Polygon.prototype.getVertexIndex=function(t){for(var e=this.vertices.length,i=0;e>i;i++)if(equals(vertices[i],t))return i;return-1},GEOMETRY.Polygon.prototype.insertVertex=function(t,e,i){var n,l,o,p=getVertexIndex(t),r=getVertexIndex(e);if(-1==p||-1==r)return!1;if(p>r&&(l=p,p=r,r=l),r==p+1){for(n=[],l=0;p>=l;l++)n[l]=this.vertices[l];for(n[r]=i,l=r,o=this.vertices.length;o>l;l++)n[l+1]=this.vertices[l];this.vertices=n}else r==vertices.length-1&&0==p&&this.vertices.push(i);return!0},GEOMETRY.Polygon.prototype.clone=function(){var t=new Polygon;return t.vertices=vertices.slice(this.vertices.length-1),t},GEOMETRY.Polygon.prototype.toString=function(){for(var t,e=this.vertices,i="[",n=e.length,l=0;n>l;l++)t=e[l],i+=(l>0?",":"")+"["+t.x+","+t.y+"]";return i+="]"},GEOMETRY.PolygonNode=function(t,e,i){var n;this.active,this.hole,this.v=[],this.next,this.proxy,n=new VertexNode(e,i),this.v[Clip.LEFT]=n,this.v[Clip.RIGHT]=n,this.next=t,this.proxy=this,this.active=1},GEOMETRY.PolygonNode.prototype.add_right=function(t,e){var i=new VertexNode(t,e);this.proxy.v[Clip.RIGHT].next=i,this.proxy.v[Clip.RIGHT]=i},GEOMETRY.PolygonNode.prototype.add_left=function(t,e){var i=this.proxy,n=new VertexNode(t,e);n.next=i.v[Clip.LEFT],i.v[Clip.LEFT]=n},GEOMETRY.PolySimple=function(){this.m_List=new ArrayList,this.m_Contributes=!0},GEOMETRY.PolySimple.prototype.equals=function(t){if(!(t instanceof PolySimple))return!1;var e,i,n,l,o,p,r,u=t,s=this.m_List.size(),E=u.m_List.size();if(s!=E)return!1;if(s>0){for(e=this.getX(0),i=this.getY(0),r=-1,p=0;-1==r&&E>p;p++)l=u.getX(p),o=u.getY(p),e==l&&i==o&&(r=p);if(-1==r)return!1;for(p=r,n=0;s>n;n++){if(e=this.getX(n),i=this.getY(n),l=u.getX(p),o=u.getY(p),e!=l||i!=o)return!1;p++,p>=E&&(p=0)}}return!0},GEOMETRY.PolySimple.prototype.hashCode=function(){var t=17;return t=37*t+this.m_List.hashCode()},GEOMETRY.PolySimple.prototype.toString=function(){return"PolySimple: num_points="+getNumPoints()},GEOMETRY.PolySimple.prototype.clear=function(){this.m_List.clear()},GEOMETRY.PolySimple.prototype.add=function(t,e){var i,n,l,o=[];if(o[0]=t,e&&(o[1]=e),2==o.length)this.addPointXY(o[0],o[1]);else if(1==o.length)if(o[0]instanceof Point)this.addPoint(o[0]);else if(o[0]instanceof Poly)this.addPoly(o[0]);else if(o[0]instanceof Array)for(n=0,l=o[0].length;l>n;n++)i=o[0][n],this.add(i)},GEOMETRY.PolySimple.prototype.addPointXY=function(t,e){this.addPoint(new Point(t,e))},GEOMETRY.PolySimple.prototype.addPoint=function(t){this.m_List.add(t)},GEOMETRY.PolySimple.prototype.addPoly=function(){throw"Cannot add poly to a simple poly."},GEOMETRY.PolySimple.prototype.isEmpty=function(){return this.m_List.isEmpty()},GEOMETRY.PolySimple.prototype.getBounds=function(){for(var t,e=Number.MAX_VALUE,i=Number.MAX_VALUE,n=-Number.MAX_VALUE,l=-Number.MAX_VALUE,o=this.m_List.size(),p=0;o>p;p++)t=this.getX(p),y=this.getY(p),e>t&&(e=t),t>n&&(n=t),i>y&&(i=y),y>l&&(l=y);
return new Rectangle(e,i,n-e,l-i)},GEOMETRY.PolySimple.prototype.getInnerPoly=function(t){return 0!=t&&alert("PolySimple only has one poly"),this},GEOMETRY.PolySimple.prototype.getNumInnerPoly=function(){return 1},GEOMETRY.PolySimple.prototype.getNumPoints=function(){return this.m_List.size()},GEOMETRY.PolySimple.prototype.getX=function(t){return this.m_List.get(t).x},GEOMETRY.PolySimple.prototype.getY=function(t){return this.m_List.get(t).y},GEOMETRY.PolySimple.prototype.getPoint=function(t){return this.m_List.get(t)},GEOMETRY.PolySimple.prototype.getPoints=function(){return this.m_List.toArray()},GEOMETRY.PolySimple.prototype.isPointInside=function(t){for(var e=this.getPoints(),i=e.length-1,n=!1,l=e.length,o=0;l>o;o++)(e[o].y<t.y&&e[i].y>=t.y||e[i].y<t.y&&e[o].y>=t.y)&&e[o].x+(t.y-e[o].y)/(e[i].y-e[o].y)*(e[i].x-e[o].x)<t.x&&(n=!n),i=o;return n},GEOMETRY.PolySimple.prototype.isHole=function(){return!1},GEOMETRY.PolySimple.prototype.setIsHole=function(){throw"PolySimple cannot be a hole"},GEOMETRY.PolySimple.prototype.isContributing=function(t){if(0!=t)throw"PolySimple only has one poly";return this.m_Contributes},GEOMETRY.PolySimple.prototype.setContributing=function(t,e){if(0!=t)throw"PolySimple only has one poly";this.m_Contributes=e},GEOMETRY.PolySimple.prototype.intersection=function(t){return Clip.intersection(this,t,"PolySimple")},GEOMETRY.PolySimple.prototype.union=function(t){return Clip.union(this,t,"PolySimple")},GEOMETRY.PolySimple.prototype.xor=function(t){return Clip.xor(t,this,"PolySimple")},GEOMETRY.PolySimple.prototype.difference=function(t){return Clip.difference(t,this,"PolySimple")},GEOMETRY.PolySimple.prototype.getArea=function(){var t,e,i,n,l,o,p,r,u,s=0;if(this.getNumPoints()<3)return 0;for(t=this.getX(0),e=this.getY(0),r=1,u=this.getNumPoints()-1;u>r;r++)i=this.getX(r),n=this.getY(r),l=this.getX(r+1),o=this.getY(r+1),p=(l-i)*(e-n)-(t-i)*(o-n),s+=p;return s=.5*Math.abs(s)},GEOMETRY.Rectangle=function(t,e,i,n){this.x=t,this.y=e,this.w=i,this.h=n},GEOMETRY.Rectangle.prototype={getMaxY:function(){return this.y+this.h},getMinY:function(){return this.y},getMaxX:function(){return this.x+this.w},getMinX:function(){return this.x},toString:function(){return"["+x.toString()+" "+y.toString()+" "+w.toString()+" "+h.toString()+"]"}},GEOMETRY.ScanBeamTree=function(t){this.y=t,this.less,this.more},GEOMETRY.ScanBeamTreeEntries=function(){this.sbt_entries=0,this.sb_tree},GEOMETRY.ScanBeamTreeEntries.prototype.build_sbt=function(){var t=[],e=0;return e=this.inner_build_sbt(e,t,this.sb_tree),t},GEOMETRY.ScanBeamTreeEntries.prototype.inner_build_sbt=function(t,e,i){return null!=i.less&&(t=this.inner_build_sbt(t,e,i.less)),e[t]=i.y,t++,null!=i.more&&(t=this.inner_build_sbt(t,e,i.more)),t},GEOMETRY.StNode=function(t,e){this.edge,this.xb,this.xt,this.dx,this.prev,this.edge=t,this.xb=t.xb,this.xt=t.xt,this.dx=t.dx,this.prev=e},GEOMETRY.TopPolygonNode=function(){this.top_node},GEOMETRY.TopPolygonNode.prototype.add_local_min=function(t,e){var i=this.top_node;return this.top_node=new PolygonNode(i,t,e),this.top_node},GEOMETRY.TopPolygonNode.prototype.merge_left=function(t,e){var i,n,l=this.top_node;if(e.proxy.hole=!0,t.proxy!=e.proxy)for(t.proxy.v[Clip.RIGHT].next=e.proxy.v[Clip.LEFT],e.proxy.v[Clip.LEFT]=t.proxy.v[Clip.LEFT],i=t.proxy,n=l;null!=n;n=n.next)n.proxy==i&&(n.active=0,n.proxy=e.proxy)},GEOMETRY.TopPolygonNode.prototype.merge_right=function(t,e){var i,n,l=this.top_node;if(e.proxy.hole=!1,t.proxy!=e.proxy)for(e.proxy.v[Clip.RIGHT].next=t.proxy.v[Clip.LEFT],e.proxy.v[Clip.RIGHT]=t.proxy.v[Clip.RIGHT],i=t.proxy,n=l;null!=n;n=n.next)n.proxy==i&&(n.active=0,n.proxy=e.proxy)},GEOMETRY.TopPolygonNode.prototype.count_contours=function(){for(var t,e,i=0,n=this.top_node;null!=n;n=n.next)if(0!=n.active){for(t=0,e=n.proxy.v[Clip.LEFT];null!=e;e=e.next)t++;t>2?(n.active=t,i++):n.active=0}return i},GEOMETRY.TopPolygonNode.prototype.getResult=function(t){var e,i,n,l,o,p,r,u,s,E=this.top_node,a=Clip.createNewPoly(t),C=this.count_contours();if(C>0){for(l=0,e=null,i=E;null!=i;i=e)if(e=i.next,0!=i.active){for(n=a,C>1&&(n=Clip.createNewPoly(t)),i.proxy.hole&&n.setIsHole(i.proxy.hole),r=i.proxy.v[Clip.LEFT];null!=r;r=r.next)n.add(r.x,r.y);C>1&&a.addPoly(n),l++}for(u=a,a=Clip.createNewPoly(t),o=0,p=u.getNumInnerPoly();p>o;o++)s=u.getInnerPoly(o),s.isHole()||a.addPoly(s);for(o=0,p=u.getNumInnerPoly();p>o;o++)s=u.getInnerPoly(o),s.isHole()&&a.addPoly(s)}return a},GEOMETRY.TopPolygonNode.prototype.print=function(){var t,e,i=this.top_node,n=0,l=null;for(t=i;null!=t;t=l)l=t.next,0!=t.active&&(e=0,n++)},GEOMETRY.VertexNode=function(t,e){this.x=t,this.y=e,this.next=null},GEOMETRY.VertexType=function(){},GEOMETRY.VertexType.NUL=0,GEOMETRY.VertexType.EMX=1,GEOMETRY.VertexType.ELI=2,GEOMETRY.VertexType.TED=3,GEOMETRY.VertexType.ERI=4,GEOMETRY.VertexType.RED=5,GEOMETRY.VertexType.IMM=6,GEOMETRY.VertexType.IMN=7,GEOMETRY.VertexType.EMN=8,GEOMETRY.VertexType.EMM=9,GEOMETRY.VertexType.LED=10,GEOMETRY.VertexType.ILI=11,GEOMETRY.VertexType.BED=12,GEOMETRY.VertexType.IRI=13,GEOMETRY.VertexType.IMX=14,GEOMETRY.VertexType.FUL=15,GEOMETRY.VertexType.getType=function(t,e,i,n){return t+(e<<1)+(i<<2)+(n<<3)},GEOMETRY.WeilerAtherton=function(){},GEOMETRY.WeilerAtherton.prototype.merge=function(t,e){t=t.clone(),e=e.clone()};